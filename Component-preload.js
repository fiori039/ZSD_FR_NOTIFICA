/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "com/corona/Component-preload",
	"modules": {
		"com/corona/Component.js": "sap.ui.define([\r\n\t\"sap/ui/core/UIComponent\",\r\n\t\"sap/ui/Device\",\r\n\t\"com/corona/model/models\",\r\n\t\"com/corona/controller/ListSelector\",\r\n\t\"com/corona/controller/ErrorHandler\"\r\n], function(UIComponent, Device, models, ListSelector, ErrorHandler) {\r\n\t\"use strict\";\r\n\r\n\treturn UIComponent.extend(\"com.corona.Component\", {\r\n\r\n\t\tmetadata: {\r\n\t\t\tmanifest: \"json\"\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\r\n\t\t * In this method, the FLP and device models are set and the router is initialized.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tinit: function() {\r\n\t\t\tthis.oListSelector = new ListSelector();\r\n\t\t\tthis._oErrorHandler = new ErrorHandler(this);\r\n\r\n\t\t\t// set the device model\r\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\r\n\t\t\t// set the FLP model\r\n\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\r\n\r\n\t\t\t// call the base component's init function and create the App view\r\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\r\n\r\n\t\t\t// create the views based on the url/hash\r\n\t\t\tthis.getRouter().initialize();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is destroyed by UI5 automatically.\r\n\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tdestroy: function() {\r\n\t\t\tthis.oListSelector.destroy();\r\n\t\t\tthis._oErrorHandler.destroy();\r\n\t\t\t// call the base component's destroy function\r\n\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\r\n\t\t * design mode class should be set, which influences the size appearance of some controls.\r\n\t\t * @public\r\n\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\r\n\t\t */\r\n\t\tgetContentDensityClass: function() {\r\n\t\t\tif (this._sContentDensityClass === undefined) {\r\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\r\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\r\n\t\t\t\t\tthis._sContentDensityClass = \"\";\r\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this._sContentDensityClass;\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"com/corona/controller/App.controller.js": "sap.ui.define([\r\n\t\"com/corona/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(BaseController, JSONModel) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"com.corona.controller.App\", {\r\n\r\n\t\tonInit: function() {\r\n\t\t\tvar oViewModel,\r\n\t\t\t\tfnSetAppNotBusy,\r\n\t\t\t\toListSelector = this.getOwnerComponent().oListSelector,\r\n\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\r\n\r\n\t\t\toViewModel = new JSONModel({\r\n\t\t\t\tbusy: true,\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\titemToSelect: null,\r\n\t\t\t\taddEnabled: false\r\n\r\n\t\t\t});\r\n\t\t\tthis.setModel(oViewModel, \"appView\");\r\n\r\n\t\t\tfnSetAppNotBusy = function() {\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t};\r\n\r\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded()\r\n\t\t\t\t.then(fnSetAppNotBusy);\r\n\r\n\t\t\t// Makes sure that master view is hidden in split app\r\n\t\t\t// after a new list entry has been selected.\r\n\t\t\toListSelector.attachListSelectionChange(function() {\r\n\t\t\t\tthis.byId(\"idAppControl\").hideMaster();\r\n\t\t\t}, this);\r\n\r\n\t\t\t// apply content density mode to root view\r\n\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n\t\t}\r\n\t});\r\n\r\n});",
		"com/corona/controller/BaseController.js": "/*global history */\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"sap/ui/core/routing/History\"\r\n], function(Controller, History) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"com.corona.controller.BaseController\", {\r\n\t\t/**\r\n\t\t * Convenience method for accessing the router in every controller of the application.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.core.routing.Router} the router for this component\r\n\t\t */\r\n\t\tgetRouter: function() {\r\n\t\t\treturn this.getOwnerComponent().getRouter();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for getting the view model by name in every controller of the application.\r\n\t\t * @public\r\n\t\t * @param {string} sName the model name\r\n\t\t * @returns {sap.ui.model.Model} the model instance\r\n\t\t */\r\n\t\tgetModel: function(sName) {\r\n\t\t\treturn this.getView().getModel(sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for setting the view model in every controller of the application.\r\n\t\t * @public\r\n\t\t * @param {sap.ui.model.Model} oModel the model instance\r\n\t\t * @param {string} sName the model name\r\n\t\t * @returns {sap.ui.mvc.View} the view instance\r\n\t\t */\r\n\t\tsetModel: function(oModel, sName) {\r\n\t\t\treturn this.getView().setModel(oModel, sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for getting the resource bundle.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\r\n\t\t */\r\n\t\tgetResourceBundle: function() {\r\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler  for navigating back.\r\n\t\t * It checks if there is a history entry. If yes, history.go(-1) will happen.\r\n\t\t * If not, it will replace the current entry of the browser history with the master route.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonNavBack: function() {\r\n\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\r\n\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\t// Otherwise we go backwards with a forward history\r\n\t\t\t\tvar bReplace = true;\r\n\t\t\t\tthis.getRouter().navTo(\"master\", {}, bReplace);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"com/corona/controller/CreateEntity.controller.js": "sap.ui.define([\r\n\t\"com/corona/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/m/MessageBox\"\r\n\r\n], function(BaseController, JSONModel, MessageBox) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"com.corona.controller.CreateEntity\", {\r\n\r\n\t\t_oBinding: {},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\tonInit: function() {\r\n\t\t\tvar that = this;\r\n\t\t\tthis.getRouter().getTargets().getTarget(\"create\").attachDisplay(null, this._onDisplay, this);\r\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\r\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\r\n\t\t\tthis._oViewModel = new JSONModel({\r\n\t\t\t\tenableCreate: false,\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tmode: \"create\",\r\n\t\t\t\tviewTitle: \"\"\r\n\t\t\t});\r\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\r\n\r\n\t\t\t// Register the view with the message manager\r\n\t\t\tsap.ui.getCore().getMessageManager().registerObject(this.getView(), true);\r\n\t\t\tvar oMessagesModel = sap.ui.getCore().getMessageManager().getMessageModel();\r\n\t\t\tthis._oBinding = new sap.ui.model.Binding(oMessagesModel, \"/\", oMessagesModel.getContext(\"/\"));\r\n\t\t\tthis._oBinding.attachChange(function(oEvent) {\r\n\t\t\t\tvar aMessages = oEvent.getSource().getModel().getData();\r\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\r\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\r\n\t\t\t\t\t\tthat._oViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Event handler (attached declaratively) for the view save button. Saves the changes added by the user. \r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSave: function() {\r\n\t\t\tvar that = this,\r\n\t\t\t\toModel = this.getModel();\r\n\r\n\t\t\t// abort if the  model has not been changed\r\n\t\t\tif (!oModel.hasPendingChanges()) {\r\n\t\t\t\tMessageBox.information(\r\n\t\t\t\t\tthis._oResourceBundle.getText(\"noChangesMessage\"), {\r\n\t\t\t\t\t\tid: \"noChangesInfoMessageBox\",\r\n\t\t\t\t\t\tstyleClass: that.getOwnerComponent().getContentDensityClass()\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", true);\r\n\t\t\tif (this._oViewModel.getProperty(\"/mode\") === \"edit\") {\r\n\t\t\t\t// attach to the request completed event of the batch\r\n\t\t\t\toModel.attachEventOnce(\"batchRequestCompleted\", function(oEvent) {\r\n\t\t\t\t\tvar oParams = oEvent.getParameters();\r\n\t\t\t\t\tif (oParams.success) {\r\n\t\t\t\t\t\tthat._fnUpdateSuccess();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthat._fnEntityCreationFailed();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toModel.submitChanges();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler (attached declaratively) for the view cancel button. Asks the user confirmation to discard the changes. \r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonCancel: function() {\r\n\t\t\t// check if the model has been changed\r\n\t\t\tif (this.getModel().hasPendingChanges()) {\r\n\t\t\t\t// get user confirmation first\r\n\t\t\t\tthis._showConfirmQuitChanges(); // some other thing here....\r\n\t\t\t} else {\r\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t// cancel without confirmation\r\n\t\t\t\tthis._navBack();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Internal functions\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Navigates back in the browser history, if the entry was created by this app.\r\n\t\t * If not, it navigates to the Details page\r\n\t\t * @private\r\n\t\t */\r\n\t\t_navBack: function() {\r\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\r\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash();\r\n\r\n\t\t\tthis.getView().unbindObject();\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Opens a dialog letting the user either confirm or cancel the quit and discard of changes.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showConfirmQuitChanges: function() {\r\n\t\t\tvar oComponent = this.getOwnerComponent(),\r\n\t\t\t\toModel = this.getModel();\r\n\t\t\tvar that = this;\r\n\t\t\tMessageBox.confirm(\r\n\t\t\t\tthis._oResourceBundle.getText(\"confirmCancelMessage\"), {\r\n\t\t\t\t\tstyleClass: oComponent.getContentDensityClass(),\r\n\t\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.OK) {\r\n\t\t\t\t\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t\t\t\toModel.resetChanges();\r\n\t\t\t\t\t\t\tthat._navBack();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Prepares the view for editing the selected object\r\n\t\t * @param {sap.ui.base.Event} oEvent the  display event\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onEdit: function(oEvent) {\r\n\t\t\tvar oData = oEvent.getParameter(\"data\"),\r\n\t\t\t\toView = this.getView();\r\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"edit\");\r\n\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"editViewTitle\"));\r\n\r\n\t\t\toView.bindElement({\r\n\t\t\t\tpath: oData.objectPath\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Prepares the view for creating new object\r\n\t\t * @param {sap.ui.base.Event} oEvent the  display event\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\t_onCreate: function(oEvent) {\r\n\t\t\tif (oEvent.getParameter(\"name\") && oEvent.getParameter(\"name\") !== \"create\") {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\tthis.getRouter().getTargets().detachDisplay(null, this._onDisplay, this);\r\n\t\t\t\tthis.getView().unbindObject();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"createViewTitle\"));\r\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"create\");\r\n\t\t\tvar oContext = this._oODataModel.createEntry(\"OrdenServicioSet\", {\r\n\t\t\t\tsuccess: this._fnEntityCreated.bind(this),\r\n\t\t\t\terror: this._fnEntityCreationFailed.bind(this)\r\n\t\t\t});\r\n\t\t\tthis.getView().setBindingContext(oContext);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Checks if the save button can be enabled\r\n\t\t * @private\r\n\t\t */\r\n\t\t_validateSaveEnablement: function() {\r\n\t\t\tvar aInputControls = this._getFormFields(this.byId(\"newEntitySimpleForm\"));\r\n\t\t\tvar oControl;\r\n\t\t\tfor (var m = 0; m < aInputControls.length; m++) {\r\n\t\t\t\toControl = aInputControls[m].control;\r\n\t\t\t\tif (aInputControls[m].required) {\r\n\t\t\t\t\tvar sValue = oControl.getValue();\r\n\t\t\t\t\tif (!sValue) {\r\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._checkForErrorMessages();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Checks if there is any wrong inputs that can not be saved.\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\t_checkForErrorMessages: function() {\r\n\t\t\tvar aMessages = this._oBinding.oModel.oData;\r\n\t\t\tif (aMessages.length > 0) {\r\n\t\t\t\tvar bEnableCreate = true;\r\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\r\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\r\n\t\t\t\t\t\tbEnableCreate = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", bEnableCreate);\r\n\t\t\t} else {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the success of updating an object\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnUpdateSuccess: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\tthis.getView().unbindObject();\r\n\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the success of creating an object\r\n\t\t *@param {object} oData the response of the save action\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnEntityCreated: function(oData) {\r\n\t\t\tvar sObjectPath = this.getModel().createKey(\"OrdenServicioSet\", oData);\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/itemToSelect\", \"/\" + sObjectPath); //save last created\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the failure of creating/updating an object\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnEntityCreationFailed: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the onDisplay event which is triggered when this view is displayed \r\n\t\t * @param {sap.ui.base.Event} oEvent the on display event\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onDisplay: function(oEvent) {\r\n\t\t\tvar oData = oEvent.getParameter(\"data\");\r\n\t\t\tif (oData && oData.mode === \"update\") {\r\n\t\t\t\tthis._onEdit(oEvent);\r\n\t\t\t} else {\r\n\t\t\t\tthis._onCreate(oEvent);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Gets the form fields\r\n\t\t * @param {sap.ui.layout.form} oSimpleForm the form in the view.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_getFormFields: function(oSimpleForm) {\r\n\t\t\tvar aControls = [];\r\n\t\t\tvar aFormContent = oSimpleForm.getContent();\r\n\t\t\tvar sControlType;\r\n\t\t\tfor (var i = 0; i < aFormContent.length; i++) {\r\n\t\t\t\tsControlType = aFormContent[i].getMetadata().getName();\r\n\t\t\t\tif (sControlType === \"sap.m.Input\" || sControlType === \"sap.m.DateTimeInput\" ||\r\n\t\t\t\t\tsControlType === \"sap.m.CheckBox\") {\r\n\t\t\t\t\taControls.push({\r\n\t\t\t\t\t\tcontrol: aFormContent[i],\r\n\t\t\t\t\t\trequired: aFormContent[i - 1].getRequired && aFormContent[i - 1].getRequired()\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn aControls;\r\n\t\t}\r\n\t});\r\n\r\n});",
		"com/corona/controller/Detail.controller.js": "/*global location */\r\nsap.ui.define([\r\n\t\"com/corona/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"com/corona/model/formatter\",\r\n\t\"sap/m/MessageBox\",\r\n\t\"sap/m/MessageToast\",\r\n\t\"sap/ui/model/Filter\",\r\n\t\"sap/ui/model/FilterOperator\",\r\n\t\"sap/m/Button\",\r\n\t\"sap/m/Dialog\",\r\n\t\"sap/m/Text\"\r\n], function(BaseController, JSONModel, formatter, MessageBox, MessageToast, Filter, FilterOperator, Button, Dialog, Text) {\r\n\t\"use strict\";\r\n\tvar _timeout;\r\n\r\n\treturn BaseController.extend(\"com.corona.controller.Detail\", {\r\n\r\n\t\tformatter: formatter,\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\tonInit: function() {\r\n\t\t\t// Model used to manipulate control states. The chosen values make sure,\r\n\t\t\t// detail page is busy indication immediately so there is no break in\r\n\t\t\t// between the busy indication for loading the view's meta data\r\n\t\t\tvar oViewModel = new JSONModel({\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tlineItemListTitle: this.getResourceBundle().getText(\"detailLineItemTableHeading\")\r\n\t\t\t});\r\n\r\n\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\r\n\t\t\tthis.setModel(oViewModel, \"detailView\");\r\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\r\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\r\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Event handler when the share by E-Mail button has been clicked\r\n\t\t * @public\r\n\t\t */\r\n\t\tonShareEmailPress: function() {\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\tsap.m.URLHelper.triggerEmail(\r\n\t\t\t\tnull,\r\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\r\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler when the share in JAM button has been clicked\r\n\t\t * @public\r\n\t\t */\r\n\t\tonShareInJamPress: function() {\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\r\n\t\t\t\t\tname: \"sap.collaboration.components.fiori.sharing.dialog\",\r\n\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\tobject: {\r\n\t\t\t\t\t\t\tid: location.href,\r\n\t\t\t\t\t\t\tshare: oViewModel.getProperty(\"/shareOnJamTitle\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\toShareDialog.open();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Updates the item count within the line item table's header\r\n\t\t * @param {object} oEvent an event containing the total number of items in the list\r\n\t\t * @private\r\n\t\t */\r\n\t\tonListUpdateFinished: function(oEvent) {\r\n\t\t\tvar sTitle,\r\n\t\t\t\tiTotalItems = oEvent.getParameter(\"total\"),\r\n\t\t\t\toViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\t// only update the counter if the length is final\r\n\t\t\t// if (this.byId(\"lineItemsList\").getBinding(\"items\").isLengthFinal()) {\r\n\t\t\tif (this.byId(\"tbl_conjunto\").getBinding(\"items\").isLengthFinal()) {\r\n\t\t\t\tif (iTotalItems) {\r\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeadingCount\", [iTotalItems]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//Display 'Line Items' instead of 'Line items (0)'\r\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeading\");\r\n\t\t\t\t}\r\n\t\t\t\toViewModel.setProperty(\"/lineItemListTitle\", sTitle);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler (attached declaratively) for the view delete button. Deletes the selected item. \r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonDelete: function() {\r\n\t\t\tvar that = this;\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\tsPath = oViewModel.getProperty(\"/sObjectPath\"),\r\n\t\t\t\tsObjectHeader = this._oODataModel.getProperty(sPath + \"/Aufnr\"),\r\n\t\t\t\tsQuestion = this._oResourceBundle.getText(\"deleteText\", sObjectHeader),\r\n\t\t\t\tsSuccessMessage = this._oResourceBundle.getText(\"deleteSuccess\", sObjectHeader);\r\n\r\n\t\t\tvar fnMyAfterDeleted = function() {\r\n\t\t\t\tMessageToast.show(sSuccessMessage);\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\tvar oNextItemToSelect = that.getOwnerComponent().oListSelector.findNextItem(sPath);\r\n\t\t\t\tthat.getModel(\"appView\").setProperty(\"/itemToSelect\", oNextItemToSelect.getBindingContext().getPath()); //save last deleted\r\n\t\t\t};\r\n\t\t\tthis._confirmDeletionByUser({\r\n\t\t\t\tquestion: sQuestion\r\n\t\t\t}, [sPath], fnMyAfterDeleted);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler (attached declaratively) for the view edit button. Open a view to enable the user update the selected item. \r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonEdit: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\r\n\t\t\tvar sObjectPath = this.getView().getElementBinding().getPath();\r\n\t\t\tthis.getRouter().getTargets().display(\"create\", {\r\n\t\t\t\tmode: \"update\",\r\n\t\t\t\tobjectPath: sObjectPath\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* begin: internal methods                                     */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Binds the view to the object path and expands the aggregated line items.\r\n\t\t * @function\r\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onObjectMatched: function(oEvent) {\r\n\t\t\tvar oParameter = oEvent.getParameter(\"arguments\");\r\n\t\t\tfor (var value in oParameter) {\r\n\t\t\t\toParameter[value] = decodeURIComponent(oParameter[value]);\r\n\t\t\t}\r\n\t\t\tthis.getModel().metadataLoaded().then(function() {\r\n\t\t\t\tvar sObjectPath = this.getModel().createKey(\"OrdenServicioSet\", oParameter);\r\n\t\t\t\tthis._bindView(\"/\" + sObjectPath);\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Binds the view to the object path. Makes sure that detail view displays\r\n\t\t * a busy indicator while data for the corresponding element binding is loaded.\r\n\t\t * @function\r\n\t\t * @param {string} sObjectPath path to the object to be bound to the view.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_bindView: function(sObjectPath) {\r\n\t\t\t// Set busy indicator during view binding\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\r\n\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\tthis.getView().bindElement({\r\n\t\t\t\tpath: sObjectPath,\r\n\t\t\t\tevents: {\r\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\r\n\t\t\t\t\tdataRequested: function() {\r\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdataReceived: function() {\r\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for binding change event\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\t_onBindingChange: function() {\r\n\t\t\tvar oView = this.getView(),\r\n\t\t\t\toElementBinding = oView.getElementBinding(),\r\n\t\t\t\toViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\toAppViewModel = this.getModel(\"appView\");\r\n\r\n\t\t\t// No data for the binding\r\n\t\t\tif (!oElementBinding.getBoundContext()) {\r\n\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\r\n\t\t\t\t// if object could not be found, the selection in the master list\r\n\t\t\t\t// does not make sense anymore.\r\n\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar sPath = oElementBinding.getBoundContext().getPath(),\r\n\t\t\t\toResourceBundle = this.getResourceBundle(),\r\n\t\t\t\toObject = oView.getModel().getObject(sPath),\r\n\t\t\t\tsObjectId = oObject.Aufnr,\r\n\t\t\t\tsObjectName = oObject.Aufnr;\r\n\r\n\t\t\toViewModel.setProperty(\"/sObjectId\", sObjectId);\r\n\t\t\toViewModel.setProperty(\"/sObjectPath\", sPath);\r\n\t\t\toAppViewModel.setProperty(\"/itemToSelect\", sPath);\r\n\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\r\n\r\n\t\t\toViewModel.setProperty(\"/saveAsTileTitle\", oResourceBundle.getText(\"shareSaveTileAppTitle\", [sObjectName]));\r\n\t\t\toViewModel.setProperty(\"/shareOnJamTitle\", sObjectName);\r\n\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\r\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\r\n\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\r\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for metadata loaded event\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\t_onMetadataLoaded: function() {\r\n\t\t\t// Store original busy indicator delay for the detail view\r\n\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay(),\r\n\t\t\t\toViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\toLineItemTable = this.byId(\"lineItemsList\"),\r\n\t\t\t\tiOriginalLineItemTableBusyDelay = oLineItemTable.getBusyIndicatorDelay();\r\n\r\n\t\t\t// Make sure busy indicator is displayed immediately when\r\n\t\t\t// detail view is displayed for the first time\r\n\t\t\toViewModel.setProperty(\"/delay\", 0);\r\n\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", 0);\r\n\r\n\t\t\toLineItemTable.attachEventOnce(\"updateFinished\", function() {\r\n\t\t\t\t// Restore original busy indicator delay for line item table\r\n\t\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", iOriginalLineItemTableBusyDelay);\r\n\t\t\t});\r\n\r\n\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\r\n\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\t// Restore original busy indicator delay for the detail view\r\n\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Opens a dialog letting the user either confirm or cancel the deletion of a list of entities\r\n\t\t * @param {object} oConfirmation - Possesses up to two attributes: question (obligatory) is a string providing the statement presented to the user.\r\n\t\t * title (optional) may be a string defining the title of the popup.\r\n\t\t * @param {object} oConfirmation - Possesses up to two attributes: question (obligatory) is a string providing the statement presented to the user.\r\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\r\n\t\t * @param {callback} fnAfterDeleted (optional) - called after deletion is done. \r\n\t\t * @param {callback} fnDeleteCanceled (optional) - called when the user decides not to perform the deletion\r\n\t\t * @param {callback} fnDeleteConfirmed (optional) - called when the user decides to perform the deletion. A Promise will be passed\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\t/* eslint-disable */ // using more then 4 parameters for a function is justified here\r\n\t\t_confirmDeletionByUser: function(oConfirmation, aPaths, fnAfterDeleted, fnDeleteCanceled, fnDeleteConfirmed) {\r\n\t\t\t/* eslint-enable */\r\n\t\t\t// Callback function for when the user decides to perform the deletion\r\n\t\t\tvar fnDelete = function() {\r\n\t\t\t\t// Calls the oData Delete service\r\n\t\t\t\tthis._callDelete(aPaths, fnAfterDeleted);\r\n\t\t\t}.bind(this);\r\n\r\n\t\t\t// Opens the confirmation dialog\r\n\t\t\tMessageBox.show(oConfirmation.question, {\r\n\t\t\t\ticon: oConfirmation.icon || MessageBox.Icon.WARNING,\r\n\t\t\t\ttitle: oConfirmation.title || this._oResourceBundle.getText(\"delete\"),\r\n\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\r\n\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\r\n\t\t\t\t\t\tfnDelete();\r\n\t\t\t\t\t} else if (fnDeleteCanceled) {\r\n\t\t\t\t\t\tfnDeleteCanceled();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Performs the deletion of a list of entities.\r\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\r\n\t\t * @param {callback} fnAfterDeleted (optional) - called after deletion is done. \r\n\t\t * @return a Promise that will be resolved as soon as the deletion process ended successfully.\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\t_callDelete: function(aPaths, fnAfterDeleted) {\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\tvar fnFailed = function() {\r\n\t\t\t\tthis._oODataModel.setUseBatch(true);\r\n\t\t\t}.bind(this);\r\n\t\t\tvar fnSuccess = function() {\r\n\t\t\t\tif (fnAfterDeleted) {\r\n\t\t\t\t\tfnAfterDeleted();\r\n\t\t\t\t\tthis._oODataModel.setUseBatch(true);\r\n\t\t\t\t}\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t}.bind(this);\r\n\t\t\treturn this._deleteOneEntity(aPaths[0], fnSuccess, fnFailed);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Deletes the entity from the odata model\r\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\r\n\t\t * @param {callback} fnSuccess - Event handler for success operation.\r\n\t\t * @param {callback} fnFailed - Event handler for failure operation.\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\t_deleteOneEntity: function(sPath, fnSuccess, fnFailed) {\r\n\t\t\tvar oPromise = new Promise(function(fnResolve, fnReject) {\r\n\t\t\t\tthis._oODataModel.setUseBatch(false);\r\n\t\t\t\tthis._oODataModel.remove(sPath, {\r\n\t\t\t\t\tsuccess: fnResolve,\r\n\t\t\t\t\terror: fnReject,\r\n\t\t\t\t\tasync: true\r\n\t\t\t\t});\r\n\t\t\t}.bind(this));\r\n\t\t\toPromise.then(fnSuccess, fnFailed);\r\n\t\t\treturn oPromise;\r\n\t\t},\r\n\t\t\r\n\t\t//#NETORIVERA\r\n\t\t\r\n\t\t/**************************\r\n\t\t * Ayuda de busqueda Status\r\n\t\t **************************/\r\n\t\t \r\n\t\t /**\r\n\t\t * Abriri ayuda de busqueda Estatus\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\t handleValueHelp_status: function(oController) {\r\n\t\t\t//this.inputId = oController.oSource.sId;\r\n\t\t\t// create value help dialog\r\n\t\t\tif (!this._valueHelpDialog_status) {\r\n\t\t\t\tthis._valueHelpDialog_status = sap.ui.xmlfragment(\"com.corona.fragment.DlgStatus\", this);\r\n\t\t\t\tthis.getView().addDependent(this._valueHelpDialog_status);\r\n\t\t\t}\r\n\t\t\t// open value help dialog\r\n\t\t\tthis._valueHelpDialog_status.open();\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Filtrar en la ayuda de busqueda Estatus\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\t_handleValueHelpSearch_status: function(evt) {\r\n\t\t\tvar sValue = evt.getParameter(\"value\");\r\n\t\t\tvar oFilter = new Filter(\"Txt04\", sap.ui.model.FilterOperator.Contains, sValue);\r\n\t\t\tevt.getSource().getBinding(\"items\").sOperationMode = \"Client\";\r\n\t\t\tevt.getSource().getBinding(\"items\").filter([oFilter]);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Cerrar ayuda de busqueda Estatus\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\t_handleValueHelpClose_status: function(evt) {\r\n\t\t\tvar oSelectedItem = evt.getParameter(\"selectedItem\");\r\n\t\t\t//Se obtiene el contexto para los datos del Aviso Seleccionado\r\n\t\t\tvar bindingContext = this.getView().getBindingContext();\r\n\t\t\tvar pathAviso = bindingContext.getPath();\r\n\r\n\t\t\tif (oSelectedItem) {\r\n\t\t\t\tvar estatus_usr = this.getView().byId(\"txt_status_usr\");\r\n\t\t\t\testatus_usr.setValue(oSelectedItem.getDescription());\r\n\r\n\t\t\t\tthis.getView().getModel().setProperty(pathAviso + '/StatusSet', oSelectedItem.getTitle());\r\n\t\t\t}\r\n\t\t\tevt.getSource().getBinding(\"items\").filter([]);\r\n\t\t},\r\n\r\n\t\t/********************************\r\n\t\t * Ayuda de busqueda Actividad PM\r\n\t\t ********************************/\t\t\r\n\t\t\r\n\t\t/**\r\n\t\t * Abrir ayuda de busqueda Actividad PM\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\thandleValueHelp_actividad: function(oController) {\r\n\t\t\t//this.inputId = oController.oSource.sId;\r\n\t\t\t// create value help dialog\r\n\t\t\tif (!this._valueHelpDialog_actividad) {\r\n\t\t\t\tthis._valueHelpDialog_actividad = sap.ui.xmlfragment(\"com.corona.fragment.DlgActividad\", this);\r\n\t\t\t\tthis.getView().addDependent(this._valueHelpDialog_actividad);\r\n\t\t\t}\r\n\t\t\t// open value help dialog\r\n\t\t\tthis._valueHelpDialog_actividad.open();\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Filtrar en la ayuda de busqueda Actividad PM\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\t_handleValueHelpSearch_actividad: function(evt) {\r\n\t\t\tvar sValue = evt.getParameter(\"value\");\r\n\t\t\tvar oFilter = new Filter(\"Auart\", sap.ui.model.FilterOperator.Contains, sValue);\r\n\t\t\tevt.getSource().getBinding(\"items\").sOperationMode = \"Client\";\r\n\t\t\tevt.getSource().getBinding(\"items\").filter([oFilter]);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Cerrar ayuda de busqueda Actividad PM\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\t_handleValueHelpClose_actividad: function(evt) {\r\n\t\t\tvar oSelectedItem = evt.getParameter(\"selectedItem\");\r\n\t\t\t//Se obtiene el contexto para los datos del Aviso Seleccionado\r\n\t\t\tvar bindingContext = this.getView().getBindingContext();\r\n\t\t\tvar pathAviso = bindingContext.getPath();\r\n\r\n\t\t\tif (oSelectedItem) {\r\n\t\t\t\tvar estatus_usr = this.getView().byId(\"txt_actividad\");\r\n\t\t\t\testatus_usr.setValue(oSelectedItem.getDescription());\r\n\r\n\t\t\t\tthis.getView().getModel().setProperty(pathAviso + '/ActividadSet', oSelectedItem.getTitle());\r\n\t\t\t}\r\n\t\t\tevt.getSource().getBinding(\"items\").filter([]);\r\n\t\t},\r\n\r\n\t\t/***********************************\r\n\t\t * Operaciones por Orden de Servicio\r\n\t\t ***********************************/\r\n\t\t \r\n\t\t /**\r\n\t\t * Abrir ventana Operaciones por Orden\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\t f_dialogo_notificar: function(event) {\r\n\t\t\t// var getPath = event.getSource()._oSelectedItem.getBindingContext().getPath();\r\n\t\t\tvar BindingContext = event.getSource()._oSelectedItem.getBindingContext();\r\n\t\t \t\r\n\t\t\tif(BindingContext.getProperty(\"Aueru\") === \"X\"){\r\n\t\t\t\tthis.f_MessageBoxPress(event, \"Operación con Notificación Final\", \"error\");\r\n\t\t\t\t//Liberar posición seleccionada\r\n\t\t\t\tvar list_operacion = this.getView().byId(\"tbl_operacion\");\r\n\t\t\t\tlist_operacion.removeSelections(true);\r\n\t\t\t\treturn;\r\n\t\t \t}\r\n\t\t \t\r\n\t\t\tif(!this._dialogo_operacion) {\r\n\t\t\t\tthis._dialogo_operacion = sap.ui.xmlfragment(\"com.corona.fragment.NotificarOperacion\", this);\r\n\t\t\t\tthis.getView().addDependent(this._dialogo_operacion);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//Asignar Código de Orden\r\n\t\t\tvar orden = sap.ui.getCore().byId(\"txt_orden\");\r\n\t\t\t\torden.setValue(BindingContext.getProperty(\"Aufnr\"));\r\n\t\t\t\r\n\t\t\t//Asignar Posición\r\n\t\t\tvar posicion = sap.ui.getCore().byId(\"txt_posicion\");\r\n\t\t\t\tposicion.setValue(BindingContext.getProperty(\"Vornr\"));\r\n\t\t\t\r\n\t\t\t//Asignar Actividad\r\n\t\t\tvar actividad = sap.ui.getCore().byId(\"txt_actividad\");\t\r\n\t\t\t\tactividad.setValue(BindingContext.getProperty(\"Ltxa1\"));\r\n\t\t\t\r\n\t\t\t//Asignar Trabajo Real (unidad de medida)\r\n\t\t\tvar trabajo_unidad = sap.ui.getCore().byId(\"txt_trabajoreal_unidad\");\r\n\t\t\t\ttrabajo_unidad.setValue(BindingContext.getProperty(\"Arbeh\"));\r\n\t\t\t\r\n\t\t\t//Abrir ventana de dialogo\r\n\t\t\tthis._dialogo_operacion.open();\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Cerrar ventana Operaciones por Orden\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tf_close_dialogo_notificar: function() {\r\n\t\t\t//Limpiar ventana\r\n\t\t\tsap.ui.getCore().byId(\"txt_orden\").setValue(null);\r\n\r\n\t\t\tsap.ui.getCore().byId(\"txt_posicion\").setValue(null);\r\n\t\t\tsap.ui.getCore().byId(\"txt_actividad\").setValue(null);\r\n\r\n\t\t\tsap.ui.getCore().byId(\"txt_trabajoreal_tiempo\").setValue(null);\r\n\t\t\tsap.ui.getCore().byId(\"txt_trabajoreal_unidad\").setValue(null);\r\n\t\t\t\r\n\t\t\tsap.ui.getCore().byId(\"cbx_notificacion_final\").setSelected(false);\r\n\t\t\tsap.ui.getCore().byId(\"cbx_compensar_reserva\").setSelected(false);\r\n\t\t\t\r\n\t\t\tsap.ui.getCore().byId(\"txt_inicio_fecha\").setValue(null);\r\n\t\t\tsap.ui.getCore().byId(\"txt_inicio_hora\").setValue(null);\r\n\t\t\t\r\n\t\t\tsap.ui.getCore().byId(\"txt_fin_fecha\").setValue(null);\r\n\t\t\tsap.ui.getCore().byId(\"txt_fin_hora\").setValue(null);\r\n\t\t\t\r\n\t\t\t//Cerrar ventana\r\n\t\t\tthis._dialogo_operacion.close();\r\n\r\n\t\t\t//Liberar posición seleccionada\r\n\t\t\tvar list_operacion = this.getView().byId(\"tbl_operacion\");\r\n\t\t\tlist_operacion.removeSelections(true);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Actualizar Fecha y Hora final, basado en el tiempo (MIN) ingresado por el usuario\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tf_actualizar_fecha_hora_fin: function(event) {\r\n\t\t\tvar trabajoreal_tiempo = sap.ui.getCore().byId(\"txt_trabajoreal_tiempo\").getValue();\r\n\t\t\t\r\n\t\t\tvar inicio_fecha = sap.ui.getCore().byId(\"txt_inicio_fecha\").getValue();\r\n\t\t\tvar inicio_hora  = sap.ui.getCore().byId(\"txt_inicio_hora\").getValue();\r\n\t\t\t\r\n\t\t\tif(trabajoreal_tiempo === \"\") {\r\n\t\t\t\tsap.ui.getCore().byId(\"txt_fin_fecha\").setValue(null);\r\n\t\t\t\tsap.ui.getCore().byId(\"txt_fin_hora\").setValue(null);\r\n\t\t\t\t// this.f_MessageDialog(\"Warning\", \"Debe ingresar tiempo real del trabajo.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(inicio_fecha === \"\") {\r\n\t\t\t\tsap.ui.getCore().byId(\"txt_fin_fecha\").setValue(null);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(inicio_hora === \"\") {\r\n\t\t\t\tsap.ui.getCore().byId(\"txt_fin_hora\").setValue(null);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(inicio_fecha !== \"\" && inicio_hora !== \"\") {\r\n\t\t\t\tvar inicio_fecha_hora = inicio_fecha + \"T\" + inicio_hora + \":00-05:00\";\r\n\t\t\t\t\tinicio_fecha_hora = new Date(inicio_fecha_hora);\r\n\t\t\t\t\r\n\t\t\t\tvar fin_fecha_hora = inicio_fecha_hora;\r\n\t\t\t\t\tfin_fecha_hora.setMinutes(inicio_fecha_hora.getMinutes() + parseInt(trabajoreal_tiempo));\r\n\t\t\t\t\r\n\t\t\t\tvar fin_aa = fin_fecha_hora.getFullYear();\r\n\t\t\t\tvar fin_mm = fin_fecha_hora.getMonth() + 1;\r\n\t\t\t\tvar fin_dd = fin_fecha_hora.getDate();\r\n\t\t\t\t\r\n\t\t\t\tvar fin_hr = fin_fecha_hora.getHours();\r\n\t\t\t\tvar fin_mn = fin_fecha_hora.getMinutes();\r\n\t\t\t\t\r\n\t\t\t\tsap.ui.getCore().byId(\"txt_fin_fecha\").setValue( fin_aa + \"-\" + fin_mm + \"-\" + fin_dd);\r\n\t\t\t\tsap.ui.getCore().byId(\"txt_fin_hora\").setValue( fin_hr + \":\" + fin_mn );\r\n\t\t\t} \r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Notificar Orden de Servicio\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tf_crear_notificar: function(event) {\r\n\t\t\tdebugger;\r\n\t\t\tvar respuesta, tp_mensaje = [];\r\n\t\t\t//Validar campos\r\n\t\t\tthis.f_obligatorio_notificar();\r\n\t\t\t//Abrir cargando\r\n\t\t\tthis.onOpenDialog(event);\r\n\t\t\t\r\n\t\t\t_timeout = jQuery.sap.delayedCall(500, this, function() {\r\n\t\t\t\t//Mapear datos\r\n\t\t\t\tvar modelNotificar = this.f_mapear_notificar();\r\n\t\t\t\t\r\n\t\t\t\t//Definir modelo\r\n\t\t\t\tvar serviceUrl = this.getView().getBindingContext().getModel().sServiceUrl;\r\n\t\t\t\tvar oModel = new sap.ui.model.odata.ODataModel(serviceUrl, true);\r\n\t\t\t\t\r\n\t\t\t\t//Consumir WS\r\n\t\t\t\trespuesta = this.f_crear_entity(oModel, \"/OperacionOrdSerSet\", modelNotificar);\r\n\t\t\t\ttp_mensaje = respuesta.split('-', 2);\r\n\t\t\t\tthis._dialog.close();\r\n\t\t\t\t// this.f_close_dialogo_conjunto();\r\n\t\t\t\tthis.f_MessageBoxPress(event, tp_mensaje[1], tp_mensaje[0]);\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Validar campos obligatorios en ventana Notificar\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tf_obligatorio_notificar: function() {\r\n\t\t\t\r\n\t\t\tif(sap.ui.getCore().byId(\"txt_trabajoreal_tiempo\").getValue() === \"\") {\r\n\t\t\t\tthis.f_MessageDialog(\"Warning\", \"El campo Trabajo Real es obligatorio.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(sap.ui.getCore().byId(\"cbx_notificacion_final\").getSelected() === \"\") {\r\n\t\t\t\tthis.f_MessageDialog(\"Warning\", \"El campo Notificación Final es obligatorio.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(sap.ui.getCore().byId(\"cbx_compensar_reserva\").getSelected() === \"\") {\r\n\t\t\t\tthis.f_MessageDialog(\"Warning\", \"El campo Compensar Reserva es obligatorio.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(sap.ui.getCore().byId(\"txt_inicio_fecha\").getValue() === \"\") {\r\n\t\t\t\tthis.f_MessageDialog(\"Warning\", \"El campo Fecha Inicio es obligatorio.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(sap.ui.getCore().byId(\"txt_inicio_hora\").getValue() === \"\") {\r\n\t\t\t\tthis.f_MessageDialog(\"Warning\", \"El campo Hora Inicio es obligatorio.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Mapear campos para Notificar\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\t\t\r\n\t\tf_mapear_notificar: function() {\r\n\t\t\tvar oEntry = {};\r\n\r\n\t\t\toEntry.Aufnr = sap.ui.getCore().byId(\"txt_orden\").getValue(); //context.getProperty(\"Aufnr\");\r\n\t\t\t\r\n\t\t\toEntry.Vornr = sap.ui.getCore().byId(\"txt_posicion\").getValue();\r\n\t\t\toEntry.Ltxa1 = sap.ui.getCore().byId(\"txt_actividad\").getValue();\r\n\t\t\t\r\n\t\t\toEntry.Arbei = sap.ui.getCore().byId(\"txt_trabajoreal_tiempo\").getValue();\r\n\t\t\toEntry.Arbeh = sap.ui.getCore().byId(\"txt_trabajoreal_unidad\").getValue();\r\n\t\t\t\r\n\t\t\toEntry.Aueru = sap.ui.getCore().byId(\"cbx_notificacion_final\").getSelected() === true ? 'X' : ' ';\r\n\t\t\toEntry.Ausor = sap.ui.getCore().byId(\"cbx_compensar_reserva\").getSelected() === true ? 'X' : ' ';\r\n\t\t\t\r\n\t\t\toEntry.Isdd = this.convertir_fecha(sap.ui.getCore().byId(\"txt_inicio_fecha\").getValue());\r\n\t\t\toEntry.Isdz = this.convertir_hora(sap.ui.getCore().byId(\"txt_inicio_hora\").getValue());\r\n\t\t\t\r\n\t\t\toEntry.Iedd = this.convertir_fecha(sap.ui.getCore().byId(\"txt_fin_fecha\").getValue());\r\n\t\t\toEntry.Iedz = this.convertir_hora(sap.ui.getCore().byId(\"txt_fin_hora\").getValue());\r\n\t\t\t\r\n\t\t\treturn oEntry;\r\n\t\t},\r\n\t\t\r\n\t\t/********************\r\n\t\t * Conjunto por Aviso\r\n\t\t ********************/\r\n\t\t \r\n\t\t /**\r\n\t\t * Abrir ventana Conjunto por Aviso\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\t f_dialogo_conjunto: function(event) {\r\n\t\t\tif (!this._dialogo_conjunto) {\r\n\t\t\t\tthis._dialogo_conjunto = sap.ui.xmlfragment(\"com.corona.fragment.ConjuntoMedidas\", this);\r\n\t\t\t\tthis.getView().addDependent(this._dialogo_conjunto);\r\n\t\t\t}\r\n\t\t\tvar getPath = event.getSource()._oSelectedItem.getBindingContext().getPath();\r\n\t\t\tvar BindingContext = event.getSource()._oSelectedItem.getBindingContext();\r\n\t\t\t\r\n\t\t\t//Se mapea Código de Material\r\n\t\t\tvar material = sap.ui.getCore().getElementById(\"cod_material_select\");\r\n\t\t\t\tmaterial.setValue(BindingContext.getProperty(\"Bautl\"));\r\n\t\t\t\r\n\t\t\t//Se mapea Descripción de Material.\r\n\t\t\tvar dec_material = sap.ui.getCore().getElementById(\"desc_material_select\");\r\n\t\t\t\tdec_material.setValue(BindingContext.getProperty(\"Bautx\"));\r\n\r\n\t\t\t//Se mapea Sintoma.\r\n\t\t\tvar cod_sintoma = sap.ui.getCore().getElementById(\"cod_sintoma_select\");\r\n\t\t\t\tcod_sintoma.setValue(BindingContext.getProperty(\"Fegrp\") + \"/\" + BindingContext.getProperty(\"Fecod\"));\r\n\t\t\tvar text_sintoma = sap.ui.getCore().getElementById(\"text_sintoma\");\r\n\t\t\t\ttext_sintoma.setText(BindingContext.getProperty(\"Txtcdfe\"));\r\n\r\n\t\t\t//Se mapea Parte. \r\n\t\t\tvar cod_parte = sap.ui.getCore().getElementById(\"cod_parte_select\");\r\n\t\t\t\tcod_parte.setValue(BindingContext.getProperty(\"Otgrp\") + \"/\" + BindingContext.getProperty(\"Oteil\"));\r\n\t\t\tvar text_parte = sap.ui.getCore().getElementById(\"text_parte\");\r\n\t\t\t\ttext_parte.setText(BindingContext.getProperty(\"Txtcdot\"));\r\n\r\n\t\t\t//Se mapea Causa. \r\n\t\t\tvar cod_causa = sap.ui.getCore().getElementById(\"cod_causa_select\");\r\n\t\t\t\tcod_causa.setValue(BindingContext.getProperty(\"Urgrp\") + \"/\" + BindingContext.getProperty(\"Oteil\"));\r\n\t\t\tvar text_causa = sap.ui.getCore().getElementById(\"text_causa\");\r\n\t\t\t\ttext_causa.setText(BindingContext.getProperty(\"Txtcdur\"));\r\n\r\n\t\t\t//Se mapea Cantidad\r\n\t\t\tvar cantidad = sap.ui.getCore().getElementById(\"cantidad_select\");\r\n\t\t\tcantidad.setValue(BindingContext.getProperty(\"Canti\"));\r\n\r\n\t\t\t//sap.ui.getCore().getElementById(\"Path_conjunto\").setText(getPath);\r\ndebugger;\r\n\t\t\tthis.Path_conjunto = getPath;\r\n\t\t\t\r\n\t\t\t// var tblMedidas = sap.ui.getCore().byId(\"tbl_medida\");\r\n\t\t\t// \ttblMedidas.setModel(this.Path_conjunto + \"/MedidasSet\");\r\n\r\n\t\t\t//var prop_mod = getPath + '/Bautl';\r\n\t\t\t//event.getSource().getModel().setProperty(prop_mod, 'PRUEBA');\r\n\t\t\t//this.getView().byId(\"lineItemsList\").getModel().setProperty(getPath + '/Bautl', 'PRUEBA');\r\n\t\t\t//Guardar los datos del evento\r\n\t\t\t// open value help dialog\r\n\t\t\tthis._dialogo_conjunto.open();\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Cerrar ventana Conjunto por Aviso\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tf_close_dialogo_conjunto: function() {\r\n\t\t\tthis._dialogo_conjunto.close();\r\n\t\t\t//this._dialogo_conjunto.destroy(true);\r\n\t\t\t//this._dialogo_conjunto = undefined;\r\n\r\n\t\t\t//Se quita la fila que se tenia seleccionada.\r\n\t\t\tvar list_conju = this.getView().byId(\"tbl_conjunto\");\r\n\t\t\tlist_conju.removeSelections(true);\r\n\t\t\t//var fila_seleccionada = list_conju._oItemNavigation.iFocusedIndex;\r\n\t\t\t//list_conju.getItems()[fila_seleccionada - 1].setSelected(false);\r\n\t\t},\r\n\t\t\r\n\t\t/********************\r\n\t\t * Funciones Globales\r\n\t\t ********************/\r\n\r\n\t\t/**\r\n\t\t * Consumir servicio CREATE\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tf_crear_entity: function(p_modelo, p_entidad, p_datoEndidad) {\r\n\t\t\tvar mensaje;\r\n\r\n\t\t\tvar fnSucess = function(data, response) {\r\n\t\t\t\tmensaje = data.Texto;\r\n\t\t\t\tmensaje = \"success\" + \"-\" + mensaje;\r\n\t\t\t};\r\n\t\t\tvar fnError = function(e) {\r\n\t\t\t\tmensaje = JSON.parse(e.response.body);\r\n\t\t\t\tmensaje = mensaje.error.message.value;\r\n\t\t\t\tmensaje = \"error\" + \"-\" + mensaje;\r\n\t\t\t};\r\n\r\n\t\t\t//Crear datos nuevos del formulario profesional tabla sap ZSDT_060\r\n\t\t\tp_modelo.create(p_entidad, p_datoEndidad, null, fnSucess, fnError, false);\r\n\r\n\t\t\treturn mensaje;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Mostrar mensaje\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tf_MessageDialog: function(pEstado, pMensaje) {\r\n\t\t\tvar dialog = new Dialog({\r\n\t\t\t\ttitle: pEstado,\r\n\t\t\t\ttype: 'Message',\r\n\t\t\t\tstate: pEstado,\r\n\t\t\t\tcontent: new Text({\r\n\t\t\t\t\ttext: pMensaje\r\n\t\t\t\t}),\r\n\t\t\t\tbeginButton: new Button({\r\n\t\t\t\t\ttext: 'OK',\r\n\t\t\t\t\tpress: function() {\r\n\t\t\t\t\t\tdialog.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tafterClose: function() {\r\n\t\t\t\t\tdialog.destroy();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdialog.open();\r\n\t\t},\r\n\t\t\r\n\t\tf_MessageBoxPress: function(p_evetn, p_message, p_type) {\r\n            var bCompact = !!this.getView().$().closest(\".sapUiSizeCompact\").length;\r\n            switch (p_type) {\r\n                case \"error\":\r\n                    MessageBox.error(\r\n                        p_message, {\r\n                            styleClass: bCompact ? \"sapUiSizeCompact\" : \"\"\r\n                        }\r\n                    );\r\n                    break;\r\n                case \"success\":\r\n                    MessageBox.success(\r\n                        p_message, {\r\n                            styleClass: bCompact ? \"sapUiSizeCompact\" : \"\"\r\n                        }\r\n                    );\r\n                    break;\r\n            }\r\n\r\n        },\r\n\t\t\r\n\t\t/**\r\n\t\t * Mostrar Cargando\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonOpenDialog: function(oEvent) {\r\n\t\t\t// instantiate dialog\r\n\t\t\tif (!this._dialog) {\r\n\t\t\t\tthis._dialog = sap.ui.xmlfragment(\"com.corona.fragment.BusyDialog\", this);\r\n\t\t\t\tthis.getView().addDependent(this._dialog);\r\n\t\t\t}\r\n\r\n\t\t\t// open dialog\r\n\t\t\tjQuery.sap.syncStyleClass(\"sapUiSizeCompact\", this.getView(), this._dialog);\r\n\t\t\tthis._dialog.open();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Cerrar Cargando\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonCloseDialog: function(oEvent) {\r\n\t\t\tjQuery.sap.clearDelayedCall(_timeout);\r\n\r\n\t\t\tif (oEvent.getParameter(\"cancelPressed\")) {\r\n\t\t\t\tMessageToast.show(\"The operation has been cancelled\");\r\n\t\t\t} else {\r\n\t\t\t\tMessageToast.show(\"The operation has been completed\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tconvertir_fecha: function(pFecha) {\r\n\t\t\treturn pFecha + \"T00:00:00\";\r\n\t\t},\r\n\t\t\r\n\t\tconvertir_hora: function(pHora) {\r\n\t\t\tvar vTiempo = pHora.split(\":\");\r\n\t\t\t\r\n\t\t\treturn \"PT\" + vTiempo[0] + \"H\" + vTiempo[1] + \"M00S\";\r\n\t\t}\r\n\t\t\r\n\t});\r\n});",
		"com/corona/controller/ErrorHandler.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/m/MessageBox\"\r\n], function(UI5Object, MessageBox) {\r\n\t\"use strict\";\r\n\r\n\treturn UI5Object.extend(\"com.corona.controller.ErrorHandler\", {\r\n\r\n\t\t/**\r\n\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\r\n\t\t * @class\r\n\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\r\n\t\t * @public\r\n\t\t * @alias com.corona.controller.ErrorHandler\r\n\t\t */\r\n\t\tconstructor: function(oComponent) {\r\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\r\n\t\t\tthis._oComponent = oComponent;\r\n\t\t\tthis._oModel = oComponent.getModel();\r\n\t\t\tthis._bMessageOpen = false;\r\n\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\r\n\r\n\t\t\tthis._oModel.attachMetadataFailed(function(oEvent) {\r\n\t\t\t\tvar oParams = oEvent.getParameters();\r\n\r\n\t\t\t\tthis._showMetadataError(oParams.response);\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis._oModel.attachRequestFailed(this.onRequestFailed, this);\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Event Handler for Request Fail event\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {object} oEvent an event containing the response data\r\n\t\t * @private\r\n\t\t */\r\n\t\tonRequestFailed: function(oEvent) {\r\n\t\t\tvar oParams = oEvent.getParameters();\r\n\r\n\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\r\n\t\t\t// We already cover this case with a notFound target so we skip it here.\r\n\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\r\n\t\t\tif ((oParams.response.statusCode !== \"404\") || (oParams.response.statusCode === 404 &&\r\n\t\t\t\t\toParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\r\n\t\t\t\tthis._showServiceError(oParams.response);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when the metadata call has failed.\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showMetadataError: function(sDetails) {\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tthis._sErrorText, {\r\n\t\t\t\t\tid: \"metadataErrorMessageBox\",\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: [MessageBox.Action.RETRY, MessageBox.Action.CLOSE],\r\n\t\t\t\t\tonClose: function(sAction) {\r\n\t\t\t\t\t\tif (sAction === MessageBox.Action.RETRY) {\r\n\t\t\t\t\t\t\tthis._oModel.refreshMetadata();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox}.\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {string} sTitle the MessageBox title, {string} sMessageHeader and {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showErrorMsg: function(sTitle, sMessageHeader, sDetails) {\r\n\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tsMessageHeader, {\r\n\t\t\t\t\tid: \"ErrorMessageBox\",\r\n\t\t\t\t\ttitle: sTitle,\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\ticon: MessageBox.Icon.ERROR,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: MessageBox.Action.CLOSE\r\n\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\r\n\t\t * Only the first error message will be display.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showServiceError: function(sDetails) {\r\n\t\t\tif (this._bMessageOpen) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._bMessageOpen = true;\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tthis._sErrorText, {\r\n\t\t\t\t\tid: \"serviceErrorMessageBox\",\r\n\t\t\t\t\tdetails: sDetails.responseText,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\r\n\t\t\t\t\tonClose: function() {\r\n\t\t\t\t\t\tthis._bMessageOpen = false;\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n\r\n});",
		"com/corona/controller/ListSelector.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/m/GroupHeaderListItem\"\r\n], function(BaseObject, GroupHeaderListItem) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseObject.extend(\"com.corona.model.ListSelector\", {\r\n\r\n\t\t/**\r\n\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\r\n\t\t * function.\r\n\t\t * @class\r\n\t\t * @public\r\n\t\t * @alias com.corona.model.ListSelector\r\n\t\t */\r\n\r\n\t\tconstructor: function() {\r\n\t\t\tthis._oWhenListHasBeenSet = new Promise(function(fnResolveListHasBeenSet) {\r\n\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\r\n\t\t\t}.bind(this));\r\n\t\t\t// This promise needs to be created in the constructor, since it is allowed to\r\n\t\t\t// invoke selectItem functions before calling setBoundMasterList\r\n\t\t\tthis.oWhenListLoadingIsDone = new Promise(function(fnResolve, fnReject) {\r\n\t\t\t\t// Used to wait until the setBound masterList function is invoked\r\n\t\t\t\tthis._oWhenListHasBeenSet\r\n\t\t\t\t\t.then(function(oList) {\r\n\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\r\n\t\t\t\t\t\t\tfunction(oData) {\r\n\t\t\t\t\t\t\t\tif (!oData.getParameter(\"data\")) {\r\n\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\terror: true\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar oFirstListItem = oList.getItems()[0];\r\n\t\t\t\t\t\t\t\tif (oFirstListItem) {\r\n\t\t\t\t\t\t\t\t\t// Have to make sure that first list Item is selected\r\n\t\t\t\t\t\t\t\t\t// and a select event is triggered. Like that, the corresponding\r\n\t\t\t\t\t\t\t\t\t// detail page is loaded automatically\r\n\t\t\t\t\t\t\t\t\tfnResolve({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\tfirstListitem: oFirstListItem\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// No items in the list\r\n\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\terror: false\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\r\n\t\t * May only be invoked once per ListSelector instance.\r\n\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\r\n\t\t * @public\r\n\t\t */\r\n\t\tsetBoundMasterList: function(oList) {\r\n\t\t\tthis._oList = oList;\r\n\t\t\tthis._fnResolveListHasBeenSet(oList);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\r\n\t\t * no selection/scrolling will happen\r\n\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\r\n\t\t * @public\r\n\t\t */\r\n\t\tselectAListItem: function(sBindingPath) {\r\n\r\n\t\t\tthis.oWhenListLoadingIsDone.then(\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tvar oList = this._oList,\r\n\t\t\t\t\t\toSelectedItem;\r\n\r\n\t\t\t\t\tif (oList.getMode() === \"None\") {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toSelectedItem = oList.getSelectedItem();\r\n\r\n\t\t\t\t\t// skip update if the current selection is already matching the object path\r\n\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toList.getItems().some(function(oItem) {\r\n\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\t\toList.setSelectedItem(oItem);\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + sBindingPath +\r\n\t\t\t\t\t\t\" because the list encountered an error or had no items\");\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Convenience Functions for List Selection Change Event       */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Attaches a listener and listener function to the ListSelector's bound master list. By using\r\n\t\t * a promise, the listener is added, even if the list is not available when 'attachListSelectionChange'\r\n\t\t * is called.\r\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t * @param {function} oListener the listener object\r\n\t\t * @return {com.corona.model.ListSelector} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tattachListSelectionChange: function(fnFunction, oListener) {\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.attachSelectionChange(fnFunction, oListener);\r\n\t\t\t}.bind(this));\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Detaches a listener and listener function from the ListSelector's bound master list. By using\r\n\t\t * a promise, the listener is removed, even if the list is not available when 'detachListSelectionChange'\r\n\t\t * is called.\r\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t * @param {function} oListener the listener object\r\n\t\t * @return {com.corona.model.ListSelector} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tdetachListSelectionChange: function(fnFunction, oListener) {\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.detachSelectionChange(fnFunction, oListener);\r\n\t\t\t}.bind(this));\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Removes all selections from master list.\r\n\t\t * Does not trigger 'selectionChange' event on master list, though.\r\n\t\t * @public\r\n\t\t */\r\n\t\tclearMasterListSelection: function() {\r\n\t\t\t//use promise to make sure that 'this._oList' is available\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.removeSelections(true);\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Find the next valid list item from the master list after the current.\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindNextItem: function(sCurrentPath) {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tvar iItemsCount = aItems.length;\r\n\t\t\tif (iItemsCount === 1) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (iItemsCount > 0) {\r\n\t\t\t\tvar bFound = false;\r\n\t\t\t\tfor (var i = 0; i < iItemsCount; i++) {\r\n\t\t\t\t\tvar oItem = aItems[i];\r\n\t\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\r\n\t\t\t\t\t\tvar oCtx = oItem.getBindingContext(),\r\n\t\t\t\t\t\t\tsPath = oCtx.getPath();\r\n\t\t\t\t\t\tbFound = sPath === sCurrentPath;\r\n\t\t\t\t\t\tif (bFound) {\r\n\t\t\t\t\t\t\tif (i === iItemsCount - 1) { //the current item is the last but not the only one\r\n\t\t\t\t\t\t\t\treturn aItems[0];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn aItems[i + 1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!bFound) {\r\n\t\t\t\t\treturn null; //not valid\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * Find the list item from a path.\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindListItem: function(sPath) {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tfor (var i = 0; i < aItems.length; i++) {\r\n\t\t\t\tvar oItem = aItems[i];\r\n\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\r\n\t\t\t\t\tvar oCtx = oItem.getBindingContext();\r\n\t\t\t\t\tvar bFound = sPath === oCtx.getPath();\r\n\t\t\t\t\tif (bFound) {\r\n\t\t\t\t\t\treturn oItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null; //not found\r\n\t\t},\r\n\t\t/**\r\n\t\t * Find the first list item\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindFirstItem: function() {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tif (aItems && aItems.length > 0) {\r\n\t\t\t\treturn aItems[0];\r\n\t\t\t}\r\n\t\t\treturn null; //not found\r\n\t\t}\r\n\t});\r\n\r\n});",
		"com/corona/controller/Master.controller.js": "// /*global history */\r\n// sap.ui.define([\r\n// \t\"com/corona/controller/BaseController\",\r\n// \t\"sap/ui/model/json/JSONModel\",\r\n// \t\"sap/ui/model/Filter\",\r\n// \t\"sap/ui/model/FilterOperator\",\r\n// \t\"sap/m/GroupHeaderListItem\",\r\n// \t\"sap/ui/Device\",\r\n// \t\"com/corona/model/formatter\",\r\n// \t\"sap/m/MessageBox\"\r\n// ], function(BaseController, JSONModel, Filter, FilterOperator, GroupHeaderListItem, Device, formatter, MessageBox) {\r\n// \t\"use strict\";\r\n\r\n// \treturn BaseController.extend(\"com.corona.controller.Master\", {\r\n\r\n// \t\tformatter: formatter,\r\n\r\n// \t\t/* =========================================================== */\r\n// \t\t/* lifecycle methods                                           */\r\n// \t\t/* =========================================================== */\r\n\r\n// \t\t/**\r\n// \t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\r\n// \t\t * @public\r\n// \t\t */\r\n// \t\tonInit: function() {\r\n// \t\t\t// Control state model\r\n// \t\t\tvar oList = this.byId(\"list\"),\r\n// \t\t\t\toViewModel = this._createViewModel(),\r\n// \t\t\t\t// Put down master list's original value for busy indicator delay,\r\n// \t\t\t\t// so it can be restored later on. Busy handling on the master list is\r\n// \t\t\t\t// taken care of by the master list itself.\r\n// \t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\r\n// \t\t\tthis._oListSelector = this.getOwnerComponent().oListSelector;\r\n\r\n// \t\t\tthis._oList = oList;\r\n// \t\t\t// keeps the filter and search state\r\n// \t\t\tthis._oListFilterState = {\r\n// \t\t\t\taFilter: [],\r\n// \t\t\t\taSearch: []\r\n// \t\t\t};\r\n\r\n// \t\t\tthis.setModel(oViewModel, \"masterView\");\r\n// \t\t\t// Make sure, busy indication is showing immediately so there is no\r\n// \t\t\t// break after the busy indication for loading the view's meta data is\r\n// \t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\r\n// \t\t\toList.attachEventOnce(\"updateFinished\", function() {\r\n// \t\t\t\t// Restore original busy indicator delay for the list\r\n// \t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n// \t\t\t});\r\n\r\n// \t\t\tthis.getView().addEventDelegate({\r\n// \t\t\t\tonBeforeFirstShow: function() {\r\n// \t\t\t\t\tthis._oListSelector.setBoundMasterList(oList);\r\n// \t\t\t\t}.bind(this)\r\n// \t\t\t});\r\n\r\n// \t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\r\n// \t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\r\n// \t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\r\n// \t\t},\r\n\r\n// \t\t/* =========================================================== */\r\n// \t\t/* event handlers                                              */\r\n// \t\t/* =========================================================== */\r\n\r\n// \t\t/**\r\n// \t\t * After list data is available, this handler method updates the\r\n// \t\t * master list counter and hides the pull to refresh control, if\r\n// \t\t * necessary.\r\n// \t\t * @param {sap.ui.base.Event} oEvent the update finished event\r\n// \t\t * @public\r\n// \t\t */\r\n// \t\tonUpdateFinished: function(oEvent) {\r\n// \t\t\t// update the master list object counter after new data is loaded\r\n// \t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\r\n// \t\t\t// hide pull to refresh if necessary\r\n// \t\t\tthis.byId(\"pullToRefresh\").hide();\r\n// \t\t\tthis._findItem();\r\n// \t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n// \t\t},\r\n\r\n// \t\t/**\r\n// \t\t * Event handler for the master search field. Applies current\r\n// \t\t * filter value and triggers a new search. If the search field's\r\n// \t\t * 'refresh' button has been pressed, no new search is triggered\r\n// \t\t * and the list binding is refresh instead.\r\n// \t\t * @param {sap.ui.base.Event} oEvent the search event\r\n// \t\t * @public\r\n// \t\t */\r\n// \t\tonSearch: function(oEvent) {\r\n// \t\t\tif (oEvent.getParameters().refreshButtonPressed) {\r\n// \t\t\t\t// Search field's 'refresh' button has been pressed.\r\n// \t\t\t\t// This is visible if you select any master list item.\r\n// \t\t\t\t// In this case no new search is triggered, we only\r\n// \t\t\t\t// refresh the list binding.\r\n// \t\t\t\tthis.onRefresh();\r\n// \t\t\t\treturn;\r\n// \t\t\t}\r\n\r\n// \t\t\tvar sQuery = oEvent.getParameter(\"query\");\r\n\r\n// \t\t\tif (sQuery) {\r\n// \t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"Aufnr\", FilterOperator.Contains, sQuery)];\r\n// \t\t\t} else {\r\n// \t\t\t\tthis._oListFilterState.aSearch = [];\r\n// \t\t\t}\r\n// \t\t\tthis._applyFilterSearch();\r\n\r\n// \t\t},\r\n\r\n// \t\t/**\r\n// \t\t * Event handler for refresh event. Keeps filter, sort\r\n// \t\t * and group settings and refreshes the list binding.\r\n// \t\t * @public\r\n// \t\t */\r\n// \t\tonRefresh: function() {\r\n// \t\t\tthis._oList.getBinding(\"items\").refresh();\r\n// \t\t},\r\n\r\n// \t\t/**\r\n// \t\t * Event handler for the sorter selection.\r\n// \t\t * @param {sap.ui.base.Event} oEvent the select event\r\n// \t\t * @public\r\n// \t\t */\r\n// \t\tonSort: function(oEvent) {\r\n// \t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey(),\r\n// \t\t\t\taSorters = this._oGroupSortState.sort(sKey);\r\n\r\n// \t\t\tthis._applyGroupSort(aSorters);\r\n// \t\t},\r\n\r\n// \t\t/**\r\n// \t\t * Event handler for the list selection event\r\n// \t\t * @param {sap.ui.base.Event} oEvent the list selectionChange event\r\n// \t\t * @public\r\n// \t\t */\r\n// \t\tonSelectionChange: function(oEvent) {\r\n// \t\t\tvar that = this;\r\n// \t\t\tvar oItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n// \t\t\tvar fnLeave = function() {\r\n// \t\t\t\tthat._oODataModel.resetChanges();\r\n// \t\t\t\tthat._showDetail(oItem);\r\n// \t\t\t};\r\n// \t\t\tif (this._oODataModel.hasPendingChanges()) {\r\n// \t\t\t\tthis._leaveEditPage(fnLeave);\r\n// \t\t\t} else {\r\n// \t\t\t\tthis._showDetail(oItem);\r\n// \t\t\t}\r\n// \t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n// \t\t},\r\n\r\n// \t\t/**\r\n// \t\t * Event handler for the bypassed event, which is fired when no routing pattern matched.\r\n// \t\t * If there was an object selected in the master list, that selection is removed.\r\n// \t\t * @public\r\n// \t\t */\r\n// \t\tonBypassed: function() {\r\n// \t\t\tthis._oList.removeSelections(true);\r\n// \t\t},\r\n\r\n// \t\t/**\r\n// \t\t * Used to create GroupHeaders with non-capitalized caption.\r\n// \t\t * These headers are inserted into the master list to\r\n// \t\t * group the master list's items.\r\n// \t\t * @param {Object} oGroup group whose text is to be displayed\r\n// \t\t * @public\r\n// \t\t * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.\r\n// \t\t */\r\n// \t\tcreateGroupHeader: function(oGroup) {\r\n// \t\t\treturn new GroupHeaderListItem({\r\n// \t\t\t\ttitle: oGroup.text,\r\n// \t\t\t\tupperCase: false\r\n// \t\t\t});\r\n// \t\t},\r\n\r\n// \t\t/**\r\n// \t\t * Navigates back in the browser history, if the entry was created by this app.\r\n// \t\t * If not, it navigates to the Fiori Launchpad home page\r\n// \t\t * @override\r\n// \t\t * @public\r\n// \t\t */\r\n// \t\tonNavBack: function() {\r\n// \t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\r\n// \t\t\t\tsPreviousHash = oHistory.getPreviousHash(),\r\n// \t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\r\n\r\n// \t\t\tif (sPreviousHash !== undefined) {\r\n// \t\t\t\t// The history contains a previous entry\r\n// \t\t\t\thistory.go(-1);\r\n// \t\t\t} else {\r\n// \t\t\t\t// Navigate back to FLP home\r\n// \t\t\t\toCrossAppNavigator.toExternal({\r\n// \t\t\t\t\ttarget: {\r\n// \t\t\t\t\t\tshellHash: \"#Shell-home\"\r\n// \t\t\t\t\t}\r\n// \t\t\t\t});\r\n// \t\t\t}\r\n// \t\t},\r\n\r\n// \t\t/**\r\n// \t\t * Event handler  (attached declaratively) called when the add button in the master view is pressed. it opens the create view.\r\n// \t\t * @public\r\n// \t\t */\r\n// \t\tonAdd: function() {\r\n// \t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\r\n// \t\t\tthis.getRouter().getTargets().display(\"create\");\r\n\r\n// \t\t},\r\n\r\n// \t\t/* =========================================================== */\r\n// \t\t/* begin: internal methods                                     */\r\n// \t\t/* =========================================================== */\r\n\r\n// \t\t/**\r\n// \t\t * Creates the model for the view\r\n// \t\t * @private\r\n// \t\t */\r\n// \t\t_createViewModel: function() {\r\n// \t\t\treturn new JSONModel({\r\n// \t\t\t\tisFilterBarVisible: false,\r\n// \t\t\t\tfilterBarLabel: \"\",\r\n// \t\t\t\tdelay: 0,\r\n// \t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\r\n// \t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\r\n// \t\t\t\tsortBy: \"Aufnr\",\r\n// \t\t\t\tgroupBy: \"None\"\r\n// \t\t\t});\r\n// \t\t},\r\n\r\n// \t\t/**\r\n// \t\t * Ask for user confirmation to leave the edit page and discard all changes\r\n// \t\t * @param {object} fnLeave - handles discard changes\r\n// \t\t * @param {object} fnLeaveCancelled - handles cancel\r\n// \t\t * @private\r\n// \t\t */\r\n// \t\t_leaveEditPage: function(fnLeave, fnLeaveCancelled) {\r\n// \t\t\tvar sQuestion = this.getResourceBundle().getText(\"warningConfirm\");\r\n// \t\t\tvar sTitle = this.getResourceBundle().getText(\"warning\");\r\n\r\n// \t\t\tMessageBox.show(sQuestion, {\r\n// \t\t\t\ticon: MessageBox.Icon.WARNING,\r\n// \t\t\t\ttitle: sTitle,\r\n// \t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\r\n// \t\t\t\tonClose: function(oAction) {\r\n// \t\t\t\t\tif (oAction === MessageBox.Action.OK) {\r\n// \t\t\t\t\t\tfnLeave();\r\n// \t\t\t\t\t} else if (fnLeaveCancelled) {\r\n// \t\t\t\t\t\tfnLeaveCancelled();\r\n// \t\t\t\t\t}\r\n// \t\t\t\t}\r\n// \t\t\t});\r\n// \t\t},\r\n\r\n// \t\t/**\r\n// \t\t * If the master route was hit (empty hash) we have to set\r\n// \t\t * the hash to to the first item in the list as soon as the\r\n// \t\t * listLoading is done and the first item in the list is known\r\n// \t\t * @private\r\n// \t\t */\r\n// \t\t_onMasterMatched: function() {\r\n// \t\t\tthis._oListSelector.oWhenListLoadingIsDone.then(\r\n// \t\t\t\tfunction(mParams) {\r\n// \t\t\t\t\tif (mParams.list.getMode() === \"None\") {\r\n// \t\t\t\t\t\treturn;\r\n// \t\t\t\t\t}\r\n// \t\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n// \t\t\t\t\tif (!mParams.list.getSelectedItem()) {\r\n// \t\t\t\t\t\tthis.getRouter().navTo(\"object\", {\r\n// \t\t\t\t\t\t\tAufnr: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Aufnr\")),\r\n// \t\t\t\t\t\t\tAuart: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Auart\")),\r\n// \t\t\t\t\t\t\tWerks: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Werks\")),\r\n// \t\t\t\t\t\t\tQmart: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Qmart\")),\r\n// \t\t\t\t\t\t\tQmnum: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Qmnum\")),\r\n// \t\t\t\t\t\t\tRbnr: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Rbnr\")),\r\n// \t\t\t\t\t\t\tAufpl: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Aufpl\"))\r\n// \t\t\t\t\t\t}, true);\r\n// \t\t\t\t\t}\r\n// \t\t\t\t}.bind(this),\r\n// \t\t\t\tfunction(mParams) {\r\n// \t\t\t\t\tif (mParams.error) {\r\n// \t\t\t\t\t\treturn;\r\n// \t\t\t\t\t}\r\n// \t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\r\n// \t\t\t\t}.bind(this)\r\n// \t\t\t);\r\n// \t\t},\r\n\r\n// \t\t/**\r\n// \t\t * Shows the selected item on the detail page\r\n// \t\t * On phones a additional history entry is created\r\n// \t\t * @param {sap.m.ObjectListItem} oItem selected Item\r\n// \t\t * @private\r\n// \t\t */\r\n// \t\t_showDetail: function(oItem) {\r\n// \t\t\tvar bReplace = !Device.system.phone;\r\n// \t\t\tthis.getRouter().navTo(\"object\", {\r\n// \t\t\t\tAufnr: encodeURIComponent(oItem.getBindingContext().getProperty(\"Aufnr\")),\r\n// \t\t\t\tAuart: encodeURIComponent(oItem.getBindingContext().getProperty(\"Auart\")),\r\n// \t\t\t\tWerks: encodeURIComponent(oItem.getBindingContext().getProperty(\"Werks\")),\r\n// \t\t\t\tQmart: encodeURIComponent(oItem.getBindingContext().getProperty(\"Qmart\")),\r\n// \t\t\t\tQmnum: encodeURIComponent(oItem.getBindingContext().getProperty(\"Qmnum\")),\r\n// \t\t\t\tRbnr: encodeURIComponent(oItem.getBindingContext().getProperty(\"Rbnr\")),\r\n// \t\t\t\tAufpl: encodeURIComponent(oItem.getBindingContext().getProperty(\"Aufpl\"))\r\n// \t\t\t}, bReplace);\r\n// \t\t},\r\n\r\n// \t\t/**\r\n// \t\t * Sets the item count on the master list header\r\n// \t\t * @param {integer} iTotalItems the total number of items in the list\r\n// \t\t * @private\r\n// \t\t */\r\n// \t\t_updateListItemCount: function(iTotalItems) {\r\n// \t\t\tvar sTitle;\r\n// \t\t\t// only update the counter if the length is final\r\n// \t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\r\n// \t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\r\n// \t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\r\n// \t\t\t}\r\n// \t\t},\r\n\r\n// \t\t/**\r\n// \t\t * Internal helper method to apply both filter and search state together on the list binding\r\n// \t\t * @private\r\n// \t\t */\r\n// \t\t_applyFilterSearch: function() {\r\n// \t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\r\n// \t\t\t\toViewModel = this.getModel(\"masterView\");\r\n// \t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\r\n// \t\t\t// changes the noDataText of the list in case there are no filter results\r\n// \t\t\tif (aFilters.length !== 0) {\r\n// \t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\r\n// \t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\r\n// \t\t\t\t// only reset the no data text to default when no new search was triggered\r\n// \t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\r\n// \t\t\t}\r\n// \t\t},\r\n\r\n// \t\t/**\r\n// \t\t * Internal helper method to apply both group and sort state together on the list binding\r\n// \t\t * @private\r\n// \t\t */\r\n// \t\t_applyGroupSort: function(aSorters) {\r\n// \t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\r\n// \t\t},\r\n\r\n// \t\t/**\r\n// \t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\r\n// \t\t * @param {string} sFilterBarText the selected filter value\r\n// \t\t * @private\r\n// \t\t */\r\n// \t\t_updateFilterBar: function(sFilterBarText) {\r\n// \t\t\tvar oViewModel = this.getModel(\"masterView\");\r\n// \t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\r\n// \t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\r\n// \t\t},\r\n\r\n// \t\t/**\r\n// \t\t * Internal helper method that adds \"/\" to the item's path \r\n// \t\t * @private\r\n// \t\t */\r\n// \t\t_fnGetPathWithSlash: function(sPath) {\r\n// \t\t\treturn (sPath.indexOf(\"/\") === 0 ? \"\" : \"/\") + sPath;\r\n// \t\t},\r\n\r\n// \t\t/**\r\n// \t\t * It navigates to the saved itemToSelect item. After delete it navigate to the next item. \r\n// \t\t * After add it navigates to the new added item if it is displayed in the tree. If not it navigates to the first item.\r\n// \t\t * @private\r\n// \t\t */\r\n// \t\t_findItem: function() {\r\n// \t\t\tvar itemToSelect = this.getModel(\"appView\").getProperty(\"/itemToSelect\");\r\n// \t\t\tif (itemToSelect) {\r\n// \t\t\t\tvar sPath = this._fnGetPathWithSlash(itemToSelect);\r\n// \t\t\t\tvar oItem = this._oListSelector.findListItem(sPath);\r\n// \t\t\t\tif (!oItem) { //item is not viewable in the tree. not in the current tree page.\r\n// \t\t\t\t\toItem = this._oListSelector.findFirstItem();\r\n// \t\t\t\t\tif (oItem) {\r\n// \t\t\t\t\t\tsPath = oItem.getBindingContext().getPath();\r\n// \t\t\t\t\t} else {\r\n// \t\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\r\n// \t\t\t\t\t\treturn;\r\n// \t\t\t\t\t}\r\n// \t\t\t\t}\r\n// \t\t\t\tthis._oListSelector.selectAListItem(sPath);\r\n// \t\t\t\tthis._showDetail(oItem);\r\n// \t\t\t}\r\n// \t\t}\r\n\r\n// \t});\r\n// });\r\n\r\n\r\n\r\n\r\n/*global history */\r\nsap.ui.define([\r\n\t\"com/corona/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/model/Filter\",\r\n\t\"sap/ui/model/FilterOperator\",\r\n\t\"sap/m/GroupHeaderListItem\",\r\n\t\"sap/ui/Device\",\r\n\t\"com/corona/model/formatter\",\r\n\t\"sap/m/MessageBox\"\r\n], function(BaseController, JSONModel, Filter, FilterOperator, GroupHeaderListItem, Device, formatter, MessageBox) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"com.corona.controller.Master\", {\r\n\t\toPersonalizationDialog: null,\r\n\t\tformatter: formatter,\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\t// Control state model\r\n\t\t\tvar oList = this.byId(\"list\"),\r\n\t\t\t\toViewModel = this._createViewModel(),\r\n\t\t\t\t// Put down master list's original value for busy indicator delay,\r\n\t\t\t\t// so it can be restored later on. Busy handling on the master list is\r\n\t\t\t\t// taken care of by the master list itself.\r\n\t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\r\n\t\t\tthis._oListSelector = this.getOwnerComponent().oListSelector;\r\n\r\n\t\t\tthis._oList = oList;\r\n\t\t\t// keeps the filter and search state\r\n\t\t\tthis._oListFilterState = {\r\n\t\t\t\taFilter: [],\r\n\t\t\t\taSearch: []\r\n\t\t\t};\r\n\r\n\t\t\tthis.setModel(oViewModel, \"masterView\");\r\n\t\t\t// Make sure, busy indication is showing immediately so there is no\r\n\t\t\t// break after the busy indication for loading the view's meta data is\r\n\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\r\n\t\t\toList.attachEventOnce(\"updateFinished\", function() {\r\n\t\t\t\t// Restore original busy indicator delay for the list\r\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t});\r\n\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeFirstShow: function() {\r\n\t\t\t\t\tthis._oListSelector.setBoundMasterList(oList);\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\r\n\t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\r\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * After list data is available, this handler method updates the\r\n\t\t * master list counter and hides the pull to refresh control, if\r\n\t\t * necessary.\r\n\t\t * @param {sap.ui.base.Event} oEvent the update finished event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonUpdateFinished: function(oEvent) {\r\n\t\t\t// update the master list object counter after new data is loaded\r\n\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\r\n\t\t\t// hide pull to refresh if necessary\r\n\t\t\tthis.byId(\"pullToRefresh\").hide();\r\n\t\t\tthis._findItem();\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\r\n\t\t\tif (!this.abrir_dialogo) {\r\n\t\t\t\tthis.abrir_dialogo = true;\r\n\t\t\t\t//Agregar Dialogo\r\n\t\t\t\tthis.f_open_dialog_login();\r\n\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the master search field. Applies current\r\n\t\t * filter value and triggers a new search. If the search field's\r\n\t\t * 'refresh' button has been pressed, no new search is triggered\r\n\t\t * and the list binding is refresh instead.\r\n\t\t * @param {sap.ui.base.Event} oEvent the search event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSearch: function(oEvent) {\r\n\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\r\n\t\t\t\t// Search field's 'refresh' button has been pressed.\r\n\t\t\t\t// This is visible if you select any master list item.\r\n\t\t\t\t// In this case no new search is triggered, we only\r\n\t\t\t\t// refresh the list binding.\r\n\t\t\t\tthis.onRefresh();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar sQuery = oEvent.getParameter(\"query\");\r\n\r\n\t\t\tif (sQuery) {\r\n\t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"Aufnr\", FilterOperator.Contains, sQuery)];\r\n\t\t\t} else {\r\n\t\t\t\tthis._oListFilterState.aSearch = [];\r\n\t\t\t}\r\n\t\t\tthis._applyFilterSearch();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for refresh event. Keeps filter, sort\r\n\t\t * and group settings and refreshes the list binding.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonRefresh: function() {\r\n\t\t\tthis._oList.getBinding(\"items\").refresh();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the sorter selection.\r\n\t\t * @param {sap.ui.base.Event} oEvent the select event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSort: function(oEvent) {\r\n\t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey(),\r\n\t\t\t\taSorters = this._oGroupSortState.sort(sKey);\r\n\r\n\t\t\tthis._applyGroupSort(aSorters);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the list selection event\r\n\t\t * @param {sap.ui.base.Event} oEvent the list selectionChange event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSelectionChange: function(oEvent) {\r\n\t\t\tvar that = this;\r\n\t\t\tvar oItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\t\t\tvar fnLeave = function() {\r\n\t\t\t\tthat._oODataModel.resetChanges();\r\n\t\t\t\tthat._showDetail(oItem);\r\n\t\t\t};\r\n\t\t\tif (this._oODataModel.hasPendingChanges()) {\r\n\t\t\t\tthis._leaveEditPage(fnLeave);\r\n\t\t\t} else {\r\n\t\t\t\tthis._showDetail(oItem);\r\n\t\t\t}\r\n\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the bypassed event, which is fired when no routing pattern matched.\r\n\t\t * If there was an object selected in the master list, that selection is removed.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonBypassed: function() {\r\n\t\t\tthis._oList.removeSelections(true);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Used to create GroupHeaders with non-capitalized caption.\r\n\t\t * These headers are inserted into the master list to\r\n\t\t * group the master list's items.\r\n\t\t * @param {Object} oGroup group whose text is to be displayed\r\n\t\t * @public\r\n\t\t * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.\r\n\t\t */\r\n\t\tcreateGroupHeader: function(oGroup) {\r\n\t\t\treturn new GroupHeaderListItem({\r\n\t\t\t\ttitle: oGroup.text,\r\n\t\t\t\tupperCase: false\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Navigates back in the browser history, if the entry was created by this app.\r\n\t\t * If not, it navigates to the Fiori Launchpad home page\r\n\t\t * @override\r\n\t\t * @public\r\n\t\t */\r\n\t\tonNavBack: function() {\r\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\r\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash(),\r\n\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\r\n\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\t// Navigate back to FLP home\r\n\t\t\t\toCrossAppNavigator.toExternal({\r\n\t\t\t\t\ttarget: {\r\n\t\t\t\t\t\tshellHash: \"#Shell-home\"\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler  (attached declaratively) called when the add button in the master view is pressed. it opens the create view.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonAdd: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\r\n\t\t\tthis.getRouter().getTargets().display(\"create\");\r\n\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* begin: internal methods                                     */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Creates the model for the view\r\n\t\t * @private\r\n\t\t */\r\n\t\t_createViewModel: function() {\r\n\t\t\treturn new JSONModel({\r\n\t\t\t\tisFilterBarVisible: false,\r\n\t\t\t\tfilterBarLabel: \"\",\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\r\n\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\r\n\t\t\t\tsortBy: \"Aufnr\",\r\n\t\t\t\tgroupBy: \"None\"\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Ask for user confirmation to leave the edit page and discard all changes\r\n\t\t * @param {object} fnLeave - handles discard changes\r\n\t\t * @param {object} fnLeaveCancelled - handles cancel\r\n\t\t * @private\r\n\t\t */\r\n\t\t_leaveEditPage: function(fnLeave, fnLeaveCancelled) {\r\n\t\t\tvar sQuestion = this.getResourceBundle().getText(\"warningConfirm\");\r\n\t\t\tvar sTitle = this.getResourceBundle().getText(\"warning\");\r\n\r\n\t\t\tMessageBox.show(sQuestion, {\r\n\t\t\t\ticon: MessageBox.Icon.WARNING,\r\n\t\t\t\ttitle: sTitle,\r\n\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\r\n\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\r\n\t\t\t\t\t\tfnLeave();\r\n\t\t\t\t\t} else if (fnLeaveCancelled) {\r\n\t\t\t\t\t\tfnLeaveCancelled();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * If the master route was hit (empty hash) we have to set\r\n\t\t * the hash to to the first item in the list as soon as the\r\n\t\t * listLoading is done and the first item in the list is known\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onMasterMatched: function() {\r\n\t\t\tthis._oListSelector.oWhenListLoadingIsDone.then(\r\n\t\t\t\tfunction(mParams) {\r\n\t\t\t\t\tif (mParams.list.getMode() === \"None\") {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t\tif (!mParams.list.getSelectedItem()) {\r\n\t\t\t\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\t\t\t\tAufnr: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Aufnr\")),\r\n\t\t\t\t\t\t\tAuart: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Auart\")),\r\n\t\t\t\t\t\t\tWerks: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Werks\")),\r\n\t\t\t\t\t\t\tQmart: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Qmart\")),\r\n\t\t\t\t\t\t\tQmnum: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Qmnum\")),\r\n\t\t\t\t\t\t\tRbnr : encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Rbnr\")),\r\n\t\t\t\t\t\t\tAufpl: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Aufpl\"))\r\n\t\t\t\t\t\t}, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\tfunction(mParams) {\r\n\t\t\t\t\tif (mParams.error) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\r\n\t\t\t\t}.bind(this)\r\n\t\t\t);\r\n\r\n\t\t\t//Add jgiraldo \r\n\t\t\tif (!this.filtroIngreso) {\r\n\t\t\t\tthis.filtroIngreso = true;\r\n\t\t\t\tthis.f_filtro_aviso('CC15', 'TEC-PV01');\r\n\t\t\t} else {\r\n\t\t\t\tvar combo_puesto = sap.ui.getCore().getElementById(\"cmb_puesto_tra\");\r\n\t\t\t\tvar combo_centro = sap.ui.getCore().getElementById(\"cmb_centro\");\r\n\r\n\t\t\t\tthis._oList.getBinding(\"items\").bClientOperation = false;\r\n\t\t\t\tthis._oList.getBinding(\"items\").sOperationMode = sap.ui.model.odata.OperationMode.Server;\r\n\r\n\t\t\t\tthis.f_filtro_aviso(combo_centro.getSelectedKey(), combo_puesto.getSelectedKey());\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t//Add Jhony\r\n\t\t_getDialog: function() {\r\n\t\t\tif (this.oPersonalizationDialog) {\r\n\t\t\t\treturn this.oPersonalizationDialog;\r\n\t\t\t}\r\n\r\n\t\t\t// associate controller with the fragment\r\n\t\t\tthis.oPersonalizationDialog = sap.ui.xmlfragment(\"com.corona.fragment.SelectCentroPuestoT\", this);\r\n\t\t\tthis.getView().addDependent(this.oPersonalizationDialog);\r\n\t\t\treturn this.oPersonalizationDialog;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows the selected item on the detail page\r\n\t\t * On phones a additional history entry is created\r\n\t\t * @param {sap.m.ObjectListItem} oItem selected Item\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showDetail: function(oItem) {\r\n\t\t\tvar bReplace = !Device.system.phone;\r\n\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\tAufnr: encodeURIComponent(oItem.getBindingContext().getProperty(\"Aufnr\")),\r\n\t\t\t\tAuart: encodeURIComponent(oItem.getBindingContext().getProperty(\"Auart\")),\r\n\t\t\t\tWerks: encodeURIComponent(oItem.getBindingContext().getProperty(\"Werks\")),\r\n\t\t\t\tQmart: encodeURIComponent(oItem.getBindingContext().getProperty(\"Qmart\")),\r\n\t\t\t\tQmnum: encodeURIComponent(oItem.getBindingContext().getProperty(\"Qmnum\")),\r\n\t\t\t\tRbnr : encodeURIComponent(oItem.getBindingContext().getProperty(\"Rbnr\")),\r\n\t\t\t\tAufpl: encodeURIComponent(oItem.getBindingContext().getProperty(\"Aufpl\"))\r\n\t\t\t}, bReplace);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sets the item count on the master list header\r\n\t\t * @param {integer} iTotalItems the total number of items in the list\r\n\t\t * @private\r\n\t\t */\r\n\t\t_updateListItemCount: function(iTotalItems) {\r\n\t\t\tvar sTitle;\r\n\t\t\t// only update the counter if the length is final\r\n\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\r\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\r\n\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method to apply both filter and search state together on the list binding\r\n\t\t * @private\r\n\t\t */\r\n\t\t_applyFilterSearch: function() {\r\n\t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\r\n\t\t\t\toViewModel = this.getModel(\"masterView\");\r\n\t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\r\n\t\t\t// changes the noDataText of the list in case there are no filter results\r\n\t\t\tif (aFilters.length !== 0) {\r\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\r\n\t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\r\n\t\t\t\t// only reset the no data text to default when no new search was triggered\r\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method to apply both group and sort state together on the list binding\r\n\t\t * @private\r\n\t\t */\r\n\t\t_applyGroupSort: function(aSorters) {\r\n\t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\r\n\t\t * @param {string} sFilterBarText the selected filter value\r\n\t\t * @private\r\n\t\t */\r\n\t\t_updateFilterBar: function(sFilterBarText) {\r\n\t\t\tvar oViewModel = this.getModel(\"masterView\");\r\n\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\r\n\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method that adds \"/\" to the item's path \r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnGetPathWithSlash: function(sPath) {\r\n\t\t\treturn (sPath.indexOf(\"/\") === 0 ? \"\" : \"/\") + sPath;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * It navigates to the saved itemToSelect item. After delete it navigate to the next item. \r\n\t\t * After add it navigates to the new added item if it is displayed in the tree. If not it navigates to the first item.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_findItem: function() {\r\n\t\t\tvar itemToSelect = this.getModel(\"appView\").getProperty(\"/itemToSelect\");\r\n\t\t\tif (itemToSelect) {\r\n\t\t\t\tvar sPath = this._fnGetPathWithSlash(itemToSelect);\r\n\t\t\t\tvar oItem = this._oListSelector.findListItem(sPath);\r\n\t\t\t\tif (!oItem) { //item is not viewable in the tree. not in the current tree page.\r\n\t\t\t\t\toItem = this._oListSelector.findFirstItem();\r\n\t\t\t\t\tif (oItem) {\r\n\t\t\t\t\t\tsPath = oItem.getBindingContext().getPath();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Se comenta código Generado por el Template para que no muestre el detalle @netw.\r\n\t\t\t\tif (!Device.system.phone) {\r\n\t\t\t\t\tthis._oListSelector.selectAListItem(sPath);\r\n\t\t\t\t\tthis._showDetail(oItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tf_filtro_aviso: function(p_centro, p_puesto) {\r\n\r\n\t\t\t//Add Jhony Giraldo\r\n\t\t\tvar filters = [];\r\n\t\t\tvar sFilter;\r\n\t\t\tvar query = p_puesto;\r\n\t\t\tsFilter = new sap.ui.model.Filter(\"Arbpl\", sap.ui.model.FilterOperator.EQ, query);\r\n\t\t\tfilters.push(sFilter);\r\n\r\n\t\t\tquery = p_centro;\r\n\t\t\tsFilter = new sap.ui.model.Filter(\"Werks\", sap.ui.model.FilterOperator.EQ, query);\r\n\t\t\tfilters.push(sFilter);\r\n\r\n\t\t\tvar binding = this._oList.getBinding(\"items\");\r\n\t\t\tbinding.filter(filters);\r\n\t\t},\r\n\r\n\t\tf_get_puestos: function() {\r\n\t\t\tvar combo_puesto = sap.ui.getCore().getElementById(\"cmb_puesto_tra\");\r\n\t\t\tvar combo_centro = sap.ui.getCore().getElementById(\"cmb_centro\");\r\n\r\n\t\t\tcombo_puesto.setBusy(true);\r\n\r\n\t\t\tvar filters = [];\r\n\t\t\tvar sFilter;\r\n\t\t\tvar query = combo_centro.getSelectedKey();\r\n\t\t\tsFilter = new sap.ui.model.Filter(\"Werks\", sap.ui.model.FilterOperator.EQ, query);\r\n\t\t\tfilters.push(sFilter);\r\n\t\t\tvar binding = combo_puesto.getBinding(\"items\");\r\n\t\t\tbinding.filter(filters);\r\n\r\n\t\t\tcombo_puesto.setBusy(false);\r\n\t\t},\r\n\r\n\t\tf_close_dialogo_puest_centr: function() {\r\n\t\t\tvar combo_puesto = sap.ui.getCore().getElementById(\"cmb_puesto_tra\");\r\n\t\t\tvar combo_centro = sap.ui.getCore().getElementById(\"cmb_centro\");\r\n\r\n\t\t\tthis._oList.getBinding(\"items\").bClientOperation = false;\r\n\t\t\tthis._oList.getBinding(\"items\").sOperationMode = sap.ui.model.odata.OperationMode.Server;\r\n\r\n\t\t\tthis.f_filtro_aviso(combo_centro.getSelectedKey(), combo_puesto.getSelectedKey());\r\n\t\t\tthis.oPersonalizationDialog.close();\r\n\t\t},\r\n\r\n\t\tf_open_dialog_login: function() {\r\n\t\t\t//Agregar Dialogo\r\n\t\t\tvar oPersonalizationDialog = this._getDialog();\r\n\t\t\toPersonalizationDialog.open();\r\n\t\t},\r\n\r\n\t\tf_retornar_launchpad: function() {\r\n\t\t\tthis.oPersonalizationDialog.close();\r\n\t\t\t// The history contains a previous entry\r\n\t\t\thistory.go(-1);\r\n\t\t},\r\n\r\n\t\tf_buscar_avisos: function(evt) {\r\n\t\t\tif (!this.esprimerfiltro) {\r\n\t\t\t\tthis._oList.getBinding(\"items\").sOperationMode = sap.ui.model.odata.OperationMode.Client;\r\n\r\n\t\t\t\tvar puesto_tra = sap.ui.getCore().getElementById(\"cmb_puesto_tra\").getSelectedKey();\r\n\t\t\t\tvar centro = sap.ui.getCore().getElementById(\"cmb_centro\").getSelectedKey();\r\n\r\n\t\t\t\tthis.f_filtro_aviso(centro, puesto_tra);\r\n\t\t\t}\r\n\r\n\t\t\tvar filers = [],\r\n\t\t\t\tquery = evt.getParameters().query,\r\n\t\t\t\tnameFilter = new sap.ui.model.Filter(\"Aufnr\", sap.ui.model.FilterOperator.Contains, query);\r\n\r\n\t\t\tfilers.push(nameFilter);\r\n\r\n\t\t\tnameFilter = new sap.ui.model.Filter(\"Qmnum\", sap.ui.model.FilterOperator.Contains, query);\r\n\t\t\tfilers.push(nameFilter);\r\n\r\n\t\t\tnameFilter = new sap.ui.model.Filter(\"Qmnum\", sap.ui.model.FilterOperator.Contains, query);\r\n\t\t\tfilers.push(nameFilter);\r\n\r\n\t\t\tvar oFilter = new sap.ui.model.Filter({\r\n\t\t\t\taFilters: filers,\r\n\t\t\t\tbAnd: false,\r\n\t\t\t\t_bMultiFilter: true\r\n\t\t\t});\r\n\r\n\t\t\tthis._oList.getBinding(\"items\").sOperationMode = sap.ui.model.odata.OperationMode.Client;\r\n\t\t\tthis._oList.getBinding(\"items\").filter([oFilter]);\r\n\t\t}\r\n\t});\r\n});",
		"com/corona/fragment/BusyDialog.fragment.xml": "<core:FragmentDefinition\r\n\txmlns=\"sap.m\"\r\n\txmlns:core=\"sap.ui.core\">\r\n\t<BusyDialog\r\n\t\ttitle=\"{i18n&gt;titleDialog}\"\r\n\t\ttext=\"{i18n&gt;textDialog}\"\r\n\t\tshowCancelButton=\"true\"\r\n\t\tclose=\"onDialogClosed\"/>\r\n</core:FragmentDefinition>",
		"com/corona/fragment/ConjuntoMedidas.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:u=\"sap.ui.unified\" xmlns=\"sap.m\">\n\t<Dialog class=\"sapUiContentPadding\" title=\"Conjunto y Medidas\" xmlns:l=\"sap.ui.layout\">\n\t\t\n\t\t<Panel class=\"sapUiResponsiveMargin\" headerText=\"Pos. Conjunto\" expandable=\"true\" expanded=\"false\">\n\t\t\t<content>\n\t\t\t\t<l:VerticalLayout class=\"sapUiContentPadding\" width=\"100%\">\n\t\t\t\t\t<l:content>\n\t\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Material\"/>\n\t\t\t\t\t\t<Input id=\"cod_material_select\" value=\"\" showValueHelp=\"true\" valueHelpRequest=\"f_ayuda_busqueda_material\" valueHelpOnly=\"true\"/>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Label id=\"text_material\" text=\"Descrip. Material\"/>\n\t\t\t\t\t\t<Input id=\"desc_material_select\" enabled=\"false\" value=\"\"></Input>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Cantidad\"/>\n\t\t\t\t\t\t<Input id=\"cantidad_select\" value=\"0.0\"/>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Sintoma\"/>\n\t\t\t\t\t\t<Input id=\"cod_sintoma_select\" value=\"{Fecod}\" showValueHelp=\"true\" valueHelpOnly=\"true\" valueHelpRequest=\"f_ayuda_busqueda_sint\"></Input>\n\t\t\t\t\t\t<Label id=\"text_sintoma\" text=\"\"/>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Parte\"/>\n\t\t\t\t\t\t<Input id=\"cod_parte_select\" value=\"{Oteil}\" showValueHelp=\"true\" valueHelpOnly=\"true\" valueHelpRequest=\"f_ayuda_busqueda_parte\"></Input>\n\t\t\t\t\t\t<Label id=\"text_parte\" text=\"\"/>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Causa\"/>\n\t\t\t\t\t\t<Input id=\"cod_causa_select\" value=\"{Urcod}\" showValueHelp=\"true\" valueHelpOnly=\"true\" valueHelpRequest=\"f_ayuda_busqueda_causa\"></Input>\n\t\t\t\t\t\t<Label id=\"text_causa\" text=\"\"/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t<!--<core:Icon color=\"red\" id=\"btn_eliminar\" press=\"f_confir_elimina_conjunto\" size=\"2em\" src=\"sap-icon://delete\" visible=\"true\"/>-->\n\t\t\t\t\t</l:content>\n\t\t\t\t</l:VerticalLayout>\n\t\t\t</content>\n\t\t</Panel>\n\t\t\n\t\t<Panel class=\"sapUiResponsiveMargin\" headerText=\"Medidas de Posición\" expandable=\"true\" expanded=\"true\">\n\t\t\t<content>\n\t\t\t\t<l:VerticalLayout class=\"sapUiContentPadding\" width=\"100%\">\n\t\t\t\t\t<l:content>\n\t\t\t\t\t\t<Table visible=\"true\" id=\"tbl_medida\" width=\"auto\" mode=\"SingleSelectMaster\" items=\"{/MedidasSet}\" updateFinished=\"onListUpdateFinished\" noDataText=\"{i18n>detailLineItemTableNoDataText}\" busyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" class=\"sapUiResponsiveMargin\" selectionChange=\"f_dialogo_conjunto\">\n\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t<Toolbar id=\"lineItemsToolbar_medida\">\n\t\t\t\t\t\t\t\t\t<Title id=\"lineItemsHeader_medida\" text=\"{detailView>/lineItemListTitle}\"/>\n\t\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<!--<ColumnListItem counter=\"0\" id=\"__itemXX\" visible=\"{= ${Opera} > 1 ? true : false}\">-->\n\t\t\t\t\t\t\t\t<ColumnListItem counter=\"0\" id=\"__item01\" visible=\"true\">\n\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"lbl_descripcion\" text=\"{Vornr}\"/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"lbl_valor\" text=\"{Ltxa1}\"/>\n\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t<Column id=\"__columnmedida1\" mergeDuplicates=\"false\">\n\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"cab_descripcion\" text=\"Descripción\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column id=\"__columnmedida2\" mergeDuplicates=\"false\">\n\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"cab_valor\" text=\"Valor\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</l:content>\n\t\t\t\t</l:VerticalLayout>\n\t\t\t</content>\n\t\t</Panel>\n\t\t\n\t\t<beginButton>\n\t\t\t<Button id=\"btn_cancela_conjunto\" press=\"f_close_dialogo_conjunto\" text=\"Cancelar\" type=\"Reject\"/>\n\t\t</beginButton>\n\t\t<endButton>\n\t\t\t<Button id=\"btn_conjunto_select\" press=\"f_actualiza_conjunto\" text=\"Guardar\" type=\"Accept\"/>\n\t\t</endButton>\n\t</Dialog>\n</core:FragmentDefinition>",
		"com/corona/fragment/DlgActividad.fragment.xml": "<core:FragmentDefinition\r\n\txmlns=\"sap.m\"\r\n\txmlns:core=\"sap.ui.core\">\r\n\t\r\n\t<SelectDialog\r\n\t\tid=\"list_actividad\"\r\n\t\ttitle=\"Actividad PM\"\r\n\t\tclass=\"sapUiPopupWithPadding\"\r\n\t\titems=\"{ActividadSet}\"\r\n\t\tsearch=\"_handleValueHelpSearch_actividad\"\r\n\t\tconfirm=\"_handleValueHelpClose_actividad\"\r\n\t\tcancel=\"_handleValueHelpClose_actividad\"\r\n\t\t>\r\n\t\t\r\n\t\t<StandardListItem\r\n\t\t\ttitle=\"{Ilart}\"\r\n\t\t\tdescription=\"{Auart}-{Ilart}\" />\r\n\t</SelectDialog>\r\n</core:FragmentDefinition>",
		"com/corona/fragment/DlgStatus.fragment.xml": "<core:FragmentDefinition\r\n\txmlns=\"sap.m\"\r\n\txmlns:core=\"sap.ui.core\">\r\n\t\r\n\t<SelectDialog\r\n\t\tid=\"list_status\"\r\n\t\ttitle=\"Estatus Usuario\"\r\n\t\tclass=\"sapUiPopupWithPadding\"\r\n\t\titems=\"{StatusSet}\"\r\n\t\tsearch=\"_handleValueHelpSearch_status\"\r\n\t\tconfirm=\"_handleValueHelpClose_status\"\r\n\t\tcancel=\"_handleValueHelpClose_status\"\r\n\t\t>\r\n\t\t\r\n\t\t<StandardListItem\r\n\t\t\ttitle=\"{Estat}\"\r\n\t\t\tdescription=\"{Txt04}-{Txt30}\" />\r\n\t</SelectDialog>\r\n</core:FragmentDefinition>",
		"com/corona/fragment/NotificarOperacion.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:u=\"sap.ui.unified\" xmlns=\"sap.m\">\n\t<Dialog class=\"sapUiContentPadding\" title=\"Notificar Operación\" xmlns:l=\"sap.ui.layout\">\n\t\t\n\t\t<!--<Panel class=\"sapUiResponsiveMargin\" headerText=\"Pos. Conjunto\" expandable=\"true\" expanded=\"true\">-->\n\t\t\t<content>\n\t\t\t\t<l:VerticalLayout class=\"sapUiContentPadding\" width=\"100%\">\n\t\t\t\t\t<l:content>\n\t\t\t\t\t\t<Label design=\"Bold\" required=\"false\" text=\"Num. Orden\"/>\n\t\t\t\t\t\t<Input id=\"txt_orden\" enabled=\"true\" editable=\"false\" value=\"\"/>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Label design=\"Bold\" required=\"false\" text=\"Operación\"/>\n\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<Input id=\"txt_posicion\" enabled=\"true\" editable=\"false\" value=\"\" width=\"50%\"/>\n\t\t\t\t\t\t\t\t<Input id=\"txt_actividad\" enabled=\"true\" editable=\"false\" value=\"\"/>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Trabajo Real\"/>\n\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<Input id=\"txt_trabajoreal_tiempo\" type=\"Number\" enabled=\"true\" value=\"\" placeholder=\"Duración\" textAlign=\"Right\" liveChange=\"f_actualizar_fecha_hora_fin\"/>\n\t\t\t\t\t\t\t\t<Input id=\"txt_trabajoreal_unidad\" value=\"\" editable=\"false\" textAlign=\"Left\"/>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<!--<HBox>-->\n\t\t\t\t\t\t<!--\t<items>-->\n\t\t\t\t\t\t\t\t<Label design=\"Bold\" required=\"false\" text=\"Notificación Final\"/>\n\t\t\t\t\t\t\t\t<CheckBox id=\"cbx_notificacion_final\"/>\n\t\t\t\t\t\t<!--\t</items>-->\n\t\t\t\t\t\t<!--</HBox>-->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t<!--<HBox>-->\n\t\t\t\t\t\t<!--\t<items>\t-->\n\t\t\t\t\t\t\t\t<Label design=\"Bold\" required=\"false\" text=\"Compensar Reserva\"/>\n\t\t\t\t\t\t\t\t<CheckBox id=\"cbx_compensar_reserva\"/>\n\t\t\t\t\t\t<!--\t</items>-->\n\t\t\t\t\t\t<!--</HBox>-->\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Inicio de Trabajo\"/>\n\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<DatePicker id=\"txt_inicio_fecha\" valueFormat=\"yyyy-MM-dd\" displayFormat=\"\" placeholder=\"Fecha inicio\" change=\"f_actualizar_fecha_hora_fin\"/>\n\t\t\t\t\t\t\t\t<TimePicker id=\"txt_inicio_hora\" valueFormat=\"HH:mm\" displayFormat=\"HH:mm\" placeholder=\"Hora inicio\" change=\"f_actualizar_fecha_hora_fin\"/>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t<Label design=\"Bold\" required=\"false\" text=\"Fin de Trabajo\"/>\n\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<DatePicker id=\"txt_fin_fecha\" editable=\"false\" valueFormat=\"yyyy-MM-dd\" displayFormat=\"\" placeholder=\"Fecha fin\" \n\t\t\t\t\t\t\t\tvalue=\"{type:'sap.ui.model.type.Date', formatOptions: { style: 'medium', strictParsing: true}}\" change=\"handleChange\"/>\n\t\t\t\t\t\t\t\t<TimePicker id=\"txt_fin_hora\" editable=\"false\" valueFormat=\"HH:mm\" displayFormat=\"HH:mm\" placeholder=\"Hora fin\"\n\t\t\t\t\t\t\t\tchange=\"handleChange\"/>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\n\t\t\t\t\t</l:content>\n\t\t\t\t</l:VerticalLayout>\n\t\t\t</content>\n\t\t<!--</Panel>-->\n\t\t\n\t\t<beginButton>\n\t\t\t<Button id=\"btn_operacion_cancela\" press=\"f_close_dialogo_notificar\" text=\"Cancelar\" type=\"Reject\"/>\n\t\t</beginButton>\n\t\t<endButton>\n\t\t\t<Button id=\"btn_operacion_notificar\" press=\"f_crear_notificar\" text=\"Notificar\" type=\"Accept\"/>\n\t\t</endButton>\n\t</Dialog>\n</core:FragmentDefinition>",
		"com/corona/fragment/SelectCentroPuestoT.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:u=\"sap.ui.unified\" xmlns=\"sap.m\">\r\n\t<Dialog class=\"sapUiContentPadding\" title=\"Seleccione Centro - Puesto\" xmlns:l=\"sap.ui.layout\">\r\n\t\t<content>\r\n\t\t\t<l:VerticalLayout class=\"sapUiContentPadding\" width=\"100%\">\r\n\t\t\t\t<l:content>\r\n\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Centro\"/>\r\n\t\t\t\t\t<Select id=\"cmb_centro\" items=\"{/CentroSet}\" change=\"f_get_puestos\" width=\"100%\">\r\n\t\t\t\t\t\t<core:Item key=\"{Werks}\" text=\"{Werks} - {Name1}\"/>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Label design=\"Bold\" required=\"true\" text=\"Puesto Trabajo\"/>\r\n\t\t\t\t\t<Select id=\"cmb_puesto_tra\" items=\"{/PuestoTrabajoSet}\" width=\"100%\" busy=\"true\">\r\n\t\t\t\t\t\t<core:Item key=\"{Arbpl}\" text=\"{Arbpl} - {Denomi}\"/>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</l:content>\r\n\t\t\t</l:VerticalLayout>\r\n\t\t</content>\r\n\t\t<beginButton>\r\n\t\t\t<Button id=\"btn_cancela_moderno\" press=\"f_retornar_launchpad\" text=\"Cancelar\" type=\"Back\"/>\r\n\t\t</beginButton>\r\n\t\t<endButton>\r\n\t\t\t<Button id=\"btn_moderno_select\" press=\"f_close_dialogo_puest_centr\" text=\"Ingresar\" type=\"Accept\"/>\r\n\t\t</endButton>\r\n\t</Dialog>\r\n</core:FragmentDefinition>",
		"com/corona/localService/mockserver.js": "sap.ui.define([\r\n\t\"sap/ui/core/util/MockServer\"\r\n], function(MockServer) {\r\n\t\"use strict\";\r\n\r\n\tvar oMockServer,\r\n\t\t_sAppModulePath = \"com/corona/\",\r\n\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Initializes the mock server.\r\n\t\t * You can configure the delay with the URL parameter \"serverDelay\".\r\n\t\t * The local mock data in this folder is returned instead of the real data for testing.\r\n\t\t * @public\r\n\t\t */\r\n\r\n\t\tinit: function() {\r\n\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\r\n\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\r\n\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\r\n\t\t\t\tsEntity = \"OrdenServicioSet\",\r\n\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\r\n\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\r\n\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\r\n\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\r\n\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\r\n\t\t\t\t// ensure there is a trailing slash\r\n\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\r\n\r\n\t\t\toMockServer = new MockServer({\r\n\t\t\t\trootUri: sMockServerUrl\r\n\t\t\t});\r\n\r\n\t\t\t// configure mock server with a delay of 1s\r\n\t\t\tMockServer.config({\r\n\t\t\t\tautoRespond: true,\r\n\t\t\t\tautoRespondAfter: (oUriParameters.get(\"serverDelay\") || 1000)\r\n\t\t\t});\r\n\r\n\t\t\toMockServer.simulate(sMetadataUrl, {\r\n\t\t\t\tsMockdataBaseUrl: sJsonFilesUrl,\r\n\t\t\t\tbGenerateMissingMockData: true\r\n\t\t\t});\r\n\r\n\t\t\tvar aRequests = oMockServer.getRequests(),\r\n\t\t\t\tfnResponse = function(iErrCode, sMessage, aRequest) {\r\n\t\t\t\t\taRequest.response = function(oXhr) {\r\n\t\t\t\t\t\toXhr.respond(iErrCode, {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"text/plain;charset=utf-8\"\r\n\t\t\t\t\t\t}, sMessage);\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t// handling the metadata error test\r\n\t\t\tif (oUriParameters.get(\"metadataError\")) {\r\n\t\t\t\taRequests.forEach(function(aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\r\n\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Handling request errors\r\n\t\t\tif (sErrorParam) {\r\n\t\t\t\taRequests.forEach(function(aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\r\n\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toMockServer.start();\r\n\r\n\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @public returns the mockserver of the app, should be used in integration tests\r\n\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\r\n\t\t */\r\n\t\tgetMockServer: function() {\r\n\t\t\treturn oMockServer;\r\n\t\t}\r\n\t};\r\n\r\n});",
		"com/corona/model/formatter.js": "sap.ui.define([], function() {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Rounds the currency value to 2 digits\r\n\t\t *\r\n\t\t * @public\r\n\t\t * @param {string} sValue value to be formatted\r\n\t\t * @returns {string} formatted currency value with 2 digits\r\n\t\t */\r\n\t\tcurrencyValue: function(sValue) {\r\n\t\t\tif (!sValue) {\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\r\n\t\t\treturn parseFloat(sValue).toFixed(2);\r\n\t\t}\r\n\t};\r\n\r\n});",
		"com/corona/model/GroupSortState.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/ui/model/Sorter\"\r\n], function(BaseObject, Sorter) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseObject.extend(\"com.corona.model.GroupSortState\", {\r\n\r\n\t\t/**\r\n\t\t * Creates sorters and groupers for the master list.\r\n\t\t * Since grouping also means sorting, this class modifies the viewmodel.\r\n\t\t * If a user groups by a field, and there is a corresponding sort option, the option will be chosen.\r\n\t\t * If a user ungroups, the sorting will be reset to the default sorting.\r\n\t\t * @class\r\n\t\t * @public\r\n\t\t * @alias com.corona.model.GroupSortState\r\n\t\t */\r\n\t\tconstructor: function(oViewModel, fnGroupFunction) {\r\n\t\t\tthis._oViewModel = oViewModel;\r\n\t\t\tthis._fnGroupFunction = fnGroupFunction;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sorts by Aufnr, or by \r\n\t\t *\r\n\t\t * @param sKey - the key of the field used for grouping\r\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\r\n\t\t */\r\n\t\tsort: function(sKey) {\r\n\t\t\tvar sGroupedBy = this._oViewModel.getProperty(\"/groupBy\");\r\n\r\n\t\t\tif (sGroupedBy !== \"None\") {\r\n\t\t\t\t// If the list is grouped, remove the grouping since the user wants to sort by something different\r\n\t\t\t\t// Grouping only works if the list is primary sorted by the grouping - the first sorten contains a grouper function\r\n\t\t\t\tthis._oViewModel.setProperty(\"/groupBy\", \"None\");\r\n\t\t\t}\r\n\r\n\t\t\treturn [new Sorter(sKey, false)];\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Groups by , or resets the grouping for the key \"None\"\r\n\t\t *\r\n\t\t * @param sKey - the key of the field used for grouping\r\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\r\n\t\t */\r\n\t\tgroup: function(sKey) {\r\n\t\t\tvar aSorters = [];\r\n\r\n\t\t\tif (sKey === \"\") {\r\n\t\t\t\t// Grouping means sorting so we set the select to the same Entity used for grouping\r\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"\");\r\n\r\n\t\t\t\taSorters.push(\r\n\t\t\t\t\tnew Sorter(\"\", false,\r\n\t\t\t\t\t\tthis._fnGroupFunction.bind(this))\r\n\t\t\t\t);\r\n\t\t\t} else if (sKey === \"None\") {\r\n\t\t\t\t// select the default sorting again\r\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"Aufnr\");\r\n\t\t\t}\r\n\r\n\t\t\treturn aSorters;\r\n\t\t}\r\n\r\n\t});\r\n});",
		"com/corona/model/models.js": "sap.ui.define([\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/Device\"\r\n], function(JSONModel, Device) {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\t\tcreateDeviceModel: function() {\r\n\t\t\tvar oModel = new JSONModel(Device);\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t},\r\n\r\n\t\tcreateFLPModel: function() {\r\n\t\t\tvar fnGetuser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\r\n\t\t\t\tbIsShareInJamActive = fnGetuser ? fnGetuser().isJamActive() : false,\r\n\t\t\t\toModel = new JSONModel({\r\n\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\r\n\t\t\t\t});\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t}\r\n\t};\r\n\r\n});",
		"com/corona/view/App.view.xml": "<mvc:View controllerName=\"com.corona.controller.App\" xmlns:mvc=\"sap.ui.core.mvc\" displayBlock=\"true\" busy=\"{appView>/busy}\"\n\tbusyIndicatorDelay=\"{appView>/delay}\" xmlns=\"sap.m\">\n\t<SplitApp id=\"idAppControl\"/>\n</mvc:View>",
		"com/corona/view/CreateEntity.view.xml": "<mvc:View controllerName=\"com.corona.controller.CreateEntity\" xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\"\n\txmlns:footerbar=\"sap.ushell.ui.footerbar\" xmlns:l=\"sap.ui.layout\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\"\n\txmlns:smart=\"sap.ui.comp.smartfield\" xmlns=\"sap.m\">\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" title=\"{viewModel>/viewTitle}\" busy=\"{viewModel>/busy}\">\n\t\t<semantic:content>\n\t\t\t<f:SimpleForm class=\"editableForm\" columnsL=\"1\" columnsM=\"1\" editable=\"true\" emptySpanL=\"4\" emptySpanM=\"4\" id=\"newEntitySimpleForm\"\n\t\t\t\tlabelSpanL=\"3\" labelSpanM=\"3\" layout=\"ResponsiveGridLayout\" maxContainerCols=\"2\" minWidth=\"1024\"\n\t\t\t\ttitle=\"{= ${viewModel>/mode} === 'edit'? 'Edit ZGWSD_NOTIFICACION_SRV.OrdenServicio': 'New ZGWSD_NOTIFICACION_SRV.OrdenServicio'}\">\n\t\t\t\t<f:content>\n\t\t\t\t\t<Label text=\"Orden\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Aufnr\" id=\"Aufnr_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\"\n\t\t\t\t\t\tenabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Aufnr', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:12, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Clase de orden\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Auart\" id=\"Auart_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\"\n\t\t\t\t\t\tenabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Auart', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:4, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Fecha ref.\" required=\"true\"/>\n\t\t\t\t\t<DatePicker name=\"Addat\" value=\"{ path: 'Addat', type: 'sap.ui.model.type.DateTime'}\" id=\"Addat_id\" type=\"DateTime\"\n\t\t\t\t\t\tenabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"true\"/>\n\t\t\t\t\t<Label text=\"Hora referencia\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Aduhr\" id=\"Aduhr_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\"\n\t\t\t\t\t\tenabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Aduhr', type: 'sap.ui.model.odata.type.Time' , constraints:{ nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Centro\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Werks\" id=\"Werks_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\"\n\t\t\t\t\t\tenabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Werks', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:4, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Puesto trabajo\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Arbpl\" id=\"Arbpl_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\"\n\t\t\t\t\t\tenabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Arbpl', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:8, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Clase de aviso\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Qmart\" id=\"Qmart_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\"\n\t\t\t\t\t\tenabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Qmart', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:2, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Aviso\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Qmnum\" id=\"Qmnum_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\"\n\t\t\t\t\t\tenabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Qmnum', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:12, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Perfil catálogo\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Rbnr\" id=\"Rbnr_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\"\n\t\t\t\t\t\tenabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Rbnr', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:9, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Bitácora Aviso\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Bita\" id=\"Bita_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Bita', type: 'sap.ui.model.odata.type.String' , constraints:{ nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Status usuario\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Estat\" id=\"Estat_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Estat', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:5, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Cl.actividad PM\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Ilart\" id=\"Ilart_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Ilart', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:3, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"Nº HRuta op.\" required=\"true\"/>\n\t\t\t\t\t<Input name=\"Aufpl\" id=\"Aufpl_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\"\n\t\t\t\t\t\tenabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Aufpl', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:10, nullable:false } }\"/>\n\t\t\t\t</f:content>\n\t\t\t</f:SimpleForm>\n\t\t</semantic:content>\n\t\t<semantic:saveAction>\n\t\t\t<semantic:SaveAction id=\"save\" enabled=\"{viewModel>/enableCreate}\" press=\"onSave\"/>\n\t\t</semantic:saveAction>\n\t\t<semantic:cancelAction>\n\t\t\t<semantic:CancelAction id=\"cancel\" press=\"onCancel\"></semantic:CancelAction>\n\t\t</semantic:cancelAction>\n\t</semantic:DetailPage>\n</mvc:View>",
		"com/corona/view/Detail.view.xml": "<mvc:View controllerName=\"com.corona.controller.Detail\" xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\" xmlns:footerbar=\"sap.ushell.ui.footerbar\" xmlns:f=\"sap.ui.layout.form\">\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\" title=\"{i18n>detailTitle}\"\tbusy=\"{detailView>/busy}\" busyIndicatorDelay=\"{detailView>/delay}\">\n\t\t<semantic:content>\n\t\t\t<ObjectHeader id=\"objectHeader\" title=\"Aviso: {Qmnum} \\n Orden: {Aufnr}\" intro=\"{Werks} - {Arbpl}\" iconActive=\"false\"/>\n\t\t\t\n\t\t\t<!--Formulario superior-->\n\t\t\t<f:SimpleForm class=\"editableForm\" columnsL=\"1\" columnsM=\"1\" editable=\"true\" emptySpanL=\"4\" emptySpanM=\"4\" id=\"newEntitySimpleForm\" labelSpanL=\"3\" labelSpanM=\"3\" layout=\"ResponsiveGridLayout\" maxContainerCols=\"2\" minWidth=\"1024\" title=\"{= ${viewModel>/mode} === 'edit'? 'Datos generales del Aviso': 'New ZGWSD_PRIMERCONTACTO_SRV.Avisos'}\">\n\t\t\t\t<f:content>\n\t\t\t\t\t<Label text=\"N. Aviso\"/>\n\t\t\t\t\t<Input name=\"Qmnum\" id=\"Qmnum_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"false\" visible=\"false\" value=\"{ path: 'Qmnum', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:12, nullable:false } }\"/>\n\t\t\t\t\t<Label text=\"N. Orden\"/>\n\t\t\t\t\t<Input name=\"Aufnr\" id=\"Aufnr_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"false\" visible=\"false\" value=\"{ path: 'Aufnr', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:12, nullable:false } }\"/>\n\t\t\t\t\t\n\t\t\t\t\t<Label text=\"Status usuario\" required=\"true\"/>\n\t\t\t\t\t<Input id=\"txt_status_usr\" value=\"{Estat}\" class=\"sapUiSmallMarginBottom\" valueHelpOnly=\"true\" type=\"Text\" placeholder=\"Seleccione Status\" enabled=\"true\" editable=\"true\" showValueHelp=\"true\" valueHelpRequest=\"handleValueHelp_status\"/>\n\t\t\t\t\t\n\t\t\t\t\t<Label text=\"Actividad PM\" required=\"true\"/>\n\t\t\t\t\t<Input id=\"txt_actividad\" value=\"{Ilart}\" class=\"sapUiSmallMarginBottom\" valueHelpOnly=\"true\" type=\"Text\" placeholder=\"Seleccione Actividad PM\" enabled=\"true\" editable=\"true\" showValueHelp=\"true\" valueHelpRequest=\"handleValueHelp_actividad\"/>\n\t\t\t\t</f:content>\n\t\t\t</f:SimpleForm>\n\t\t\t\n\t\t\t<!--Tabla de Operaciones de Orden de Servicio-->\n\t\t\t<Panel class=\"sapUiResponsiveMargin\" headerText=\"Operaciones Orden de Servicio\" expandable=\"true\" expanded=\"false\">\n\t\t\t\t<Table visible=\"true\" id=\"tbl_operacion\" width=\"auto\" mode=\"SingleSelectMaster\" items=\"{OperacionOrdSerSet}\" updateFinished=\"onListUpdateFinished\" noDataText=\"{i18n>detailLineItemTableNoDataText}\" busyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" class=\"sapUiResponsiveMargin\" selectionChange=\"f_dialogo_notificar\">\n\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t<Toolbar id=\"lineItemsToolbar_operacion\">\n\t\t\t\t\t\t\t<Title id=\"lineItemsHeader_operacion\" text=\"{detailView>/lineItemListTitle}\"/>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\n\t\t\t\t\t<items>\n\t\t\t\t\t<!--<ColumnListItem counter=\"0\" id=\"__item12\" visible=\"{= ${Opera} > 1 ? true : false}\">-->\n\t\t\t\t\t\t<ColumnListItem counter=\"0\" id=\"__item01\" visible=\"true\">\n\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t<Label id=\"lbl_posicion\" text=\"{Vornr}\"/>\n\t\t\t\t\t\t\t\t<Label id=\"lbl_actividad\" text=\"{Ltxa1}\"/>\n\t\t\t\t\t\t\t\t<Label id=\"lbl_tiempoplan\" text=\"{Arbei} {Arbeh}\"/>\n\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t</items>\n\t\t\t\t\n\t\t\t\t\t<columns>\n\t\t\t\t\t\t<Column id=\"__columnoperacion1\" mergeDuplicates=\"false\">\n\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<Label id=\"cab_posicion\" text=\"Posición\" design=\"Bold\"/>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t<Column id=\"__columnoperacion2\" mergeDuplicates=\"false\">\n\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<Label id=\"cab_actividad\" text=\"Actividad\" design=\"Bold\"/>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t<Column id=\"__columnoperacion3\" mergeDuplicates=\"false\">\n\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<Label id=\"cab_tiempoplan\" text=\"Tiempo Plan\" design=\"Bold\"/>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t</columns>\n\t\t\t\t\t\n\t\t\t\t</Table>\n\t\t\t</Panel>\n\t\t\t\n\t\t\t<!--Tabla de Posiciones de Aviso-->\n\t\t\t<Panel class=\"sapUiResponsiveMargin\" headerText=\"Conjuntos de Aviso\" expandable=\"true\" expanded=\"false\">\n\t\t\t\t<Table visible=\"true\" id=\"tbl_conjunto\" width=\"auto\" mode=\"SingleSelectMaster\" items=\"{ConjuntoSet}\" updateFinished=\"onListUpdateFinished\" noDataText=\"{i18n>detailLineItemTableNoDataText}\" busyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" class=\"sapUiResponsiveMargin\" selectionChange=\"f_dialogo_conjunto\">\n\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t<Toolbar id=\"lineItemsToolbar_Conjunto\">\n\t\t\t\t\t\t\t<Title id=\"lineItemsHeader_Conjunto\" text=\"{detailView>/lineItemListTitle}\"/>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\n\t\t\t\t\t<items>\n\t\t\t\t\t\t<!--<ColumnListItem counter=\"0\" id=\"__item12\" visible=\"{= ${Opera} > 1 ? true : false}\">-->\n\t\t\t\t\t\t<ColumnListItem counter=\"0\" id=\"__item02\" visible=\"true\">\n\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t<Label id=\"lbl_material\" text=\"{Bautl}\"/>\n\t\t\t\t\t\t\t\t<Label id=\"lbl_descripcion\" text=\"{Bautx}\"/>\n\t\t\t\t\t\t\t\t<Label id=\"lbl_cantidad\" text=\"{Canti}\"/>\n\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t</items>\n\t\t\t\t\n\t\t\t\t\t<columns>\n\t\t\t\t\t\t<Column id=\"__columnconjunto1\" mergeDuplicates=\"false\">\n\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<Label id=\"cab_material\" text=\"Cod. Material\" design=\"Bold\"/>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t<Column id=\"__columnconjunto2\" mergeDuplicates=\"false\">\n\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<Label id=\"cab_descripcion\" text=\"Descripción\" design=\"Bold\"/>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t<Column id=\"__columnconjunto3\" mergeDuplicates=\"false\">\n\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<Label id=\"cab_cantidad\" text=\"Cant.\" design=\"Bold\"/>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t</columns>\n\t\t\t\t\t\n\t\t\t\t</Table>\n\t\t\t</Panel>\n\t\t\t\n\t\t\t<!--Historial-->\n\t\t\t<Panel class=\"sapUiResponsiveMargin\" headerText=\"Historial\" expandable=\"true\" expanded=\"false\">\n\t\t\t\t<TextArea width=\"100%\" name=\"Bita\" id=\"Bita_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"false\" visible=\"true\" value=\"{ path: 'Bita', type: 'sap.ui.model.odata.type.String' , constraints:{ nullable:false } }\"/>\n\t\t\t\t<TextArea width=\"100%\" name=\"Bita\" id=\"Bita_edit\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\" value=\"\"/>\t\n\t\t\t</Panel>\n\t\t\t\n\t\t<!--Botones barra inferior-->\n\t\t</semantic:content>\n\t\t<semantic:editAction>\n\t\t\t<semantic:EditAction id=\"edit\" press=\"onEdit\"/>\n\t\t</semantic:editAction>\n\t\t<semantic:customFooterContent>\n\t\t\t<Button enabled=\"true\" id=\"deleteButton\" press=\"onDelete\" text=\"Delete\"/>\n\t\t</semantic:customFooterContent>\n\t\t<semantic:sendEmailAction>\n\t\t\t<semantic:SendEmailAction id=\"shareEmail\" press=\"onShareEmailPress\"/>\n\t\t</semantic:sendEmailAction>\n\t\t<semantic:shareInJamAction>\n\t\t\t<semantic:ShareInJamAction id=\"shareInJam\" visible=\"{FLP>/isShareInJamActive}\" press=\"onShareInJamPress\"/>\n\t\t</semantic:shareInJamAction>\n\t\t<semantic:saveAsTileAction>\n\t\t\t<footerbar:AddBookmarkButton id=\"shareTile\" title=\"{detailView>/saveAsTileTitle}\"/>\n\t\t</semantic:saveAsTileAction>\n\t</semantic:DetailPage>\n</mvc:View>",
		"com/corona/view/DetailNoObjectsAvailable.view.xml": "<mvc:View controllerName=\"com.corona.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage id=\"page\" title=\"{i18n>notAvailableViewTitle}\" text=\"{i18n>noObjectsAvailableText}\" icon=\"{sap-icon://product}\" description=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\n</mvc:View>",
		"com/corona/view/DetailObjectNotFound.view.xml": "<mvc:View controllerName=\"com.corona.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage id=\"page\" title=\"{i18n>detailTitle}\" text=\"{i18n>noObjectFoundText}\" icon=\"{sap-icon://product}\" description=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\n</mvc:View>",
		"com/corona/view/Master.view.xml": "<!--<mvc:View controllerName=\"com.corona.controller.Master\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\"-->\n<!--\txmlns:semantic=\"sap.m.semantic\">-->\n<!--\t<semantic:MasterPage id=\"page\" title=\"{masterView>/title}\" navButtonPress=\"onNavBack\" showNavButton=\"true\">-->\n<!--\t\t<semantic:subHeader>-->\n<!--\t\t\t<Bar id=\"headerBar\">-->\n<!--\t\t\t\t<contentMiddle>-->\n<!--\t\t\t\t\t<SearchField id=\"searchField\" showRefreshButton=\"{= !${device>/support/touch} }\" tooltip=\"{i18n>masterSearchTooltip}\" width=\"100%\"-->\n<!--\t\t\t\t\t\tsearch=\"onSearch\"></SearchField>-->\n<!--\t\t\t\t</contentMiddle>-->\n<!--\t\t\t</Bar>-->\n<!--\t\t</semantic:subHeader>-->\n<!--\t\t<semantic:content>-->\n<!--\t\t\t<PullToRefresh id=\"pullToRefresh\" visible=\"{device>/support/touch}\" refresh=\"onRefresh\"/>-->\n\t\t\t<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}\" -->\n<!--\t\t\t<List id=\"list\"-->\n<!--\t\t\t\titems=\"{ path: '/OrdenServicioSet', sorter: { path: 'Aufnr', descending: false }, groupHeaderFactory: '.createGroupHeader' }\"-->\n<!--\t\t\t\tbusyIndicatorDelay=\"{masterView>/delay}\" noDataText=\"{masterView>/noDataText}\"-->\n<!--\t\t\t\tmode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\" growing=\"true\" growingScrollToLoad=\"true\"-->\n<!--\t\t\t\tupdateFinished=\"onUpdateFinished\" selectionChange=\"onSelectionChange\">-->\n<!--\t\t\t\t<infoToolbar>-->\n<!--\t\t\t\t\t<Toolbar active=\"true\" id=\"filterBar\" visible=\"{masterView>/isFilterBarVisible}\" press=\"onOpenViewSettings\">-->\n<!--\t\t\t\t\t\t<Title id=\"filterBarLabel\" text=\"{masterView>/filterBarLabel}\"/>-->\n<!--\t\t\t\t\t</Toolbar>-->\n<!--\t\t\t\t</infoToolbar>-->\n<!--\t\t\t\t<items>-->\n<!--\t\t\t\t\t<ObjectListItem type=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\" press=\"onSelectionChange\" title=\"{Aufnr}\"></ObjectListItem>-->\n<!--\t\t\t\t</items>-->\n<!--\t\t\t</List>-->\n<!--\t\t</semantic:content>-->\n<!--\t\t<semantic:addAction>-->\n<!--\t\t\t<semantic:AddAction id=\"addButton\" enabled=\"{appView>/addEnabled}\" press=\"onAdd\"/>-->\n<!--\t\t</semantic:addAction>-->\n<!--\t</semantic:MasterPage>-->\n<!--</mvc:View>-->\n\n\n\n<mvc:View xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\" xmlns:semantic=\"sap.m.semantic\" controllerName=\"com.corona.controller.Master\">\n\t<semantic:MasterPage id=\"page\" title=\"{masterView>/title}\" navButtonPress=\"onNavBack\" showNavButton=\"true\">\n\t\t<semantic:subHeader>\n\t\t\t<Bar id=\"headerBar\">\n\t\t\t\t<contentMiddle>\n\t\t\t\t\t<SearchField id=\"searchField\" showRefreshButton=\"{= !${device>/support/touch} }\" tooltip=\"{i18n>masterSearchTooltip}\" width=\"100%\" search=\"f_buscar_avisos\"/>\n\t\t\t\t</contentMiddle>\n\t\t\t</Bar>\n\t\t</semantic:subHeader>\n\t\t<semantic:content>\n\t\t\t<PullToRefresh id=\"pullToRefresh\" visible=\"{device>/support/touch}\" refresh=\"onRefresh\"/>\n\t\t\t<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}\" -->\n\t\t\t<List id=\"list\" items=\"{/OrdenServicioSet}\" busyIndicatorDelay=\"{masterView>/delay}\" noDataText=\"{masterView>/noDataText}\" mode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\" growing=\"true\" growingScrollToLoad=\"true\" updateFinished=\"onUpdateFinished\" selectionChange=\"onSelectionChange\">\n\t\t\t\t<infoToolbar>\n\t\t\t\t\t<Toolbar active=\"true\" id=\"filterBar\" visible=\"{masterView>/isFilterBarVisible}\" press=\"onOpenViewSettings\">\n\t\t\t\t\t\t<Title id=\"filterBarLabel\" text=\"{masterView>/filterBarLabel}\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</infoToolbar>\n\t\t\t\t<items>\n\t\t\t\t\t<ObjectListItem type=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\" press=\"onSelectionChange\" title=\"{Aufnr}\" number=\"{ path: 'Addat', type: 'sap.ui.model.type.Date'}\" numberUnit=\"{ path: 'Aduhr', type: 'sap.ui.model.odata.type.Time'}\">\n\t\t\t\t\t\t\n\t\t\t\t\t<firstStatus>\n\t\t\t\t\t\t<ObjectStatus text=\"{Qmnum}\" state=\"Success\"/>\n\t\t\t\t\t</firstStatus>\n\t\t\t\t\t\n\t\t\t\t\t<attributes>\n\t\t\t\t\t\t\t<ObjectAttribute text=\"{Qmnum}\"/>\n\t\t\t\t\t</attributes>\n\t\t\t\t\t</ObjectListItem>\n\t\t\t\t\t\n\t\t\t\t</items>\n\t\t\t</List>\n\t\t</semantic:content>\n\t\t<semantic:addAction>\n\t\t\t<semantic:AddAction id=\"addButton\" enabled=\"{appView>/addEnabled}\" visible=\"false\" press=\"onAdd\"/>\n\t\t</semantic:addAction>\n\t<semantic:mainAction>\n\t    <semantic:MainAction text=\"Login\" id=\"__action1\" press=\"f_open_dialog_login\"/>\n\t</semantic:mainAction>\n\t</semantic:MasterPage>\n</mvc:View>",
		"com/corona/view/NotFound.view.xml": "<mvc:View controllerName=\"com.corona.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage id=\"page\" title=\"{i18n>notFoundTitle}\" text=\"{i18n>notFoundText}\" icon=\"{sap-icon://document}\" description=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\n</mvc:View>",
		"com/corona/view/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<ViewSettingsDialog id=\"viewSettingsDialog\" confirm=\"onConfirmViewSettingsDialog\" resetFilters=\"onViewSettingsDialogResetFilters\">\n\t\t<filterItems>\n\t\t\t<ViewSettingsFilterItem id=\"filterItems\" text=\"{i18n>masterFilterName}\" key=\"Price\" multiSelect=\"false\">\n\t\t\t\t<items>\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter1}\" key=\"Filter1\" id=\"viewFilter1\"/>\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter2}\" key=\"Filter2\" id=\"viewFilter2\"/>\n\t\t\t\t</items>\n\t\t\t</ViewSettingsFilterItem>\n\t\t</filterItems>\n\t</ViewSettingsDialog>\n</core:FragmentDefinition>"
	}
});